
name: Build

on: [push, workflow_dispatch]

jobs:
  conan-on-linux:

    runs-on: ${{ matrix.os }}
    env:
      CC: gcc-${{ matrix.compiler_version }}
      CXX: g++-${{ matrix.compiler_version }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
        compiler_version: [9]
        python-version: ['3.10']

    steps:
      - uses: actions/checkout@v3

      - name: Setup Python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: 'x64'

      - name: Install prerequisites
        run: |
          sudo apt install -y \
          libgtk2.0-dev \
          libva-dev \
          libvdpau-dev \
          libx11-xcb-dev \
          libfontenc-dev \
          libxaw7-dev \libxkbfile-dev \
          libxmu-dev \
          libxmuu-dev \
          libxpm-dev \
          libxres-dev \
          libxss-dev \
          libxtst-dev \
          libxv-dev \
          libxvmc-dev \
          libxxf86vm-dev \
          libxcb-render-util0-dev \
          libxcb-xkb-dev \
          libxcb-icccm4-dev \
          libxcb-image0-dev \
          libxcb-keysyms1-dev \
          libxcb-randr0-dev \
          libxcb-shape0-dev \
          libxcb-sync-dev \
          libxcb-xfixes0-dev \
          libxcb-xinerama0-dev \
          libxcb-dri3-dev \
          libxcb-util-dev \
          libxcb-util0-dev \
          libopenjp2-7-dev
          sudo pip3 install conan==1.59
      - name: Run conan
        run: |
          conan install . -s build_type=Release -if build -b missing
      - name: Configure and build
        run: |
          cmake . -B build -DCMAKE_BUILD_TYPE=Release
          cmake --build build

      - name: Archive Python link library
        uses: actions/upload-artifact@v3
        with:
          name: python-link-library
          path: build/lib/CosmoSimPy.*.so


  conan-on-windows:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019]
        python-version: ['3.10']

    steps:
      - uses: actions/checkout@v3

      - name: Setup Python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: 'x64'

      - name: Install prerequisites
        run: |
          pip3 install conan==1.59
      - name: Run conan
        run: |
          conan install . -s build_type=Release -if build -b missing
      - name: Configure and build
        run: |
          cmake . -A x64 -B build -DCMAKE_BUILD_TYPE=Release
          cmake --build build --config Release

      - name: Archive Python link library
        uses: actions/upload-artifact@v3
        with:
          name: python-link-library
          path: build/lib/CosmoSimPy.*.pyd


#  conan-on-darwin:
#
#    runs-on: ${{ matrix.os }}
#    strategy:
#      fail-fast: false
#      matrix:
#        os: [macos-11]
#        python-version: ['3.10']
#
#    steps:
#      - uses: actions/checkout@v3
#
#      - name: Setup Python 3.x
#        uses: actions/setup-python@v4
#        with:
#          python-version: ${{ matrix.python-version }}
#          architecture: 'x64'
#
#      - name: Install prerequisites
#        run: |
#          pip3 install conan
#      - name: Run conan
#        run: |
#          conan install . -s build_type=Release -if build -b missing
#      - name: Configure and build
#        run: |
#          cmake . -B build -DCMAKE_BUILD_TYPE=Release
#          cmake --build build
#
#      - name: Archive Python link library
#        uses: actions/upload-artifact@v3
#        with:
#          name: python-link-library
#          path: build/lib/CosmoSimPy.*
