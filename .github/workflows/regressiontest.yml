# (C) 2023,2025: Hans Georg Schaathun <georg@schaathun.net> 

name: "Regression Test (Modular)"

description: |
  This runs the regression tests on a few linux configurations.

  The regression tests often fail inexplicably, presumably because
  minor variations in the dependencies and/or machine architecture
  cause slightly different numerical errors.  For instance, the
  same release may fail on one OS and succeed on another.

  For this reason, the regression tests cannot be automated for 
  release validation, and rely on manual evaluation.

on: 
   push:
       branches: [ feature/regressiontests, develop ]
   release:
   workflow_dispatch:
   workflow_call:

jobs:
  build-on-linux:

    name: Build on Linux
    runs-on: ${{ matrix.os }}
    env:
      CC: gcc-${{ matrix.compiler-version }}
      CXX: g++-${{ matrix.compiler-version }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.11','3.12','3.13']
        compiler-version: [13]
    steps:
      - uses: actions/checkout@v4
      - name: Build Project
        uses: ./.github/actions/build-linux
        with:
           compiler-version: ${{ matrix.compiler-version }}
           python-version: ${{ matrix.python-version }}


  regression-test:

    runs-on:  ${{ matrix.os }}
    needs: 
      - build-on-linux
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        test-dir: [ 'exactpm', 'raytrace', 'roulette', 'roulettepm',
          'new-roulette', 'new-raytrace',
          'sampled-roulette', 'sampled-raytrace',
          'cluster-roulette', 'cluster-raytrace',
          'cluster-sampled-roulette', 'cluster-sampled-raytrace',
        ]
        python-version: ['3.11','3.12','3.13']
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: 'x64'
          cache: "pip"
      - name: pip-installations
        run: |
          pip install -r requirements.txt
      - name: artifact
        uses: actions/download-artifact@v4
        with:
          path: .
      - name: diagnostic
        shell: bash
        run: |
            git status
            python3 --version
            ls -l
            ls -lR CosmoSimPy-*
      - name: move artifacts in place
        shell: bash
        run: |
          mv CosmoSimPy-*-python*/CosmoSimPy.*.so  src/CosmoSim
      - name: makeimages
        run: |
          cd RegressionTest/${{ matrix.test-dir }}
          sh ../bin/makeimages.sh
      - name: compare
        run: |
          cd RegressionTest/${{ matrix.test-dir }}
          sh ../bin/compareimages.sh
      - name: montage
        run: |
          cd RegressionTest/${{ matrix.test-dir }}
          sh ../bin/montageimages.sh
      - name: artifact-preparation
        run: |
          mkdir -p dist/${{ matrix.os }}/python${{ matrix.python-version }}/${{ matrix.test-dir }}
          mv RegressionTest/${{ matrix.test-dir }}/montage/ dist/${{ matrix.os }}/python${{ matrix.python-version }}/${{ matrix.test-dir }}
      - name: image-upload
        uses: actions/upload-artifact@v4
        with:
          name: montage-${{ matrix.os }}-${{ matrix.test-dir }}
          path: dist


