# (C) 2023: Hans Georg Schaathun <georg@schaathun.net> 

name: Make Release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:

  linux:

    runs-on: ${{ matrix.os }}
    env:
      CC: gcc-${{ matrix.compiler-version }}
      CXX: g++-${{ matrix.compiler-version }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
        compiler-version: [10]
        python-version: ['3.9','3.10','3.11','3.12']

    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/build-linux
        with:
           compiler-version: ${{ matrix. compiler-version }}
           python-version: ${{ matrix.python-version }}

  windows:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019]
        python-version: ['3.10','3.11']
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/build-windows
        with:
           compiler-version: ${{ matrix. compiler-version }}
           python-version: ${{ matrix.python-version }}

  python-dist:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@v3
      - name: Make Python Distribution
        run: |
           mkdir -p dist/CosmoSimPy
           rsync -av CosmoSimPy/ dist/CosmoSimPy/
      - name: Archive Python Application
        uses: actions/upload-artifact@v3
        with:
          name: CosmoSimPy
          path: dist

  release:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    strategy:
       fail-fast: false

    needs:
      - build-on-linux
      - build-on-windows
      - python-dist

    steps:
      - uses: actions/checkout@v3
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Download a single artifact
        uses: actions/download-artifact@v3
        with:
          name: CosmoSimPy
          path: dist
      - name: PKZip the asset
        run: |
          cd dist
          zip -r CosmoSimPy.zip CosmoSimPy
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./dist/CosmoSimPy.zip
          asset_name: CosmoSimPy.zip
          asset_content_type: application/zip
