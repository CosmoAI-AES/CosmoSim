name: 'Linux Build'

description: Build the project on Linux

inputs:
  compiler-version:
    default: 13
  python-version:
    required: false
    default: '3.12'



runs:
    using: "composite"

    steps:
      - name: Setup Python 3.x
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
          architecture: 'x64'

      - name: Install prerequisites
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y \
               libxcb-glx0-dev libxcb-cursor-dev libxcb-dri2-0-dev \
               libxcb-present-dev libxcb-composite0-dev libxcb-ewmh-dev \
               libxcb-res0-dev \
               libx11-dev libx11-xcb-dev libfontenc-dev libice-dev \
               libsm-dev libxau-dev libxaw7-dev \
               libva-dev libvdpau-dev xkb-data \
               libx11-dev libx11-xcb-dev libfontenc-dev libice-dev libsm-dev \
               libxau-dev libxaw7-dev libxcomposite-dev libxcursor-dev libxdamage-dev \
               libxfixes-dev libxi-dev libxinerama-dev libxkbfile-dev libxmuu-dev \
               libxrandr-dev libxrender-dev libxres-dev libxss-dev libxtst-dev libxv-dev \
               libxxf86vm-dev libxcb-xkb-dev libxcb-icccm4-dev libxcb-keysyms1-dev \
               libxcb-xinerama0-dev libxcb-dri3-dev uuid-dev libxcb-dri3-dev \
               libxcb-util-dev
          pip3 install -r requirements-build.txt
      - name: Config Conan
        shell: bash
        run: |
          conan profile detect --force
          conan profile show
      - name: Run conan
        shell: bash
        run: |
          conan install . --output-folder=build --build=missing --profile:build conan2/linux-profile --profile:host conan2/linux-profile
      - name: Configure and build
        shell: bash
        run: |
           cd build/
           cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_BUILD_TYPE=Release
           cmake --build .
      - name: Make Python Distribution
        shell: bash
        run: |
           mkdir -p dist/CosmoSimPy/CosmoSim
           cp build/lib/CosmoSimPy.*.so dist/CosmoSimPy/CosmoSim/
      - name: Archive Python Application
        uses: actions/upload-artifact@v4
        with:
          name: CosmoSimPy-linux-python${{ inputs.python-version }}
          path: build/lib/CosmoSimPy.*.so
      - name: Test
        shell: bash
        run: |
          strings build/lib/CosmoSimPy.*.so | grep ClusterLens
          cp build/lib/CosmoSimPy.*.so CosmoSimPy/CosmoSim
          ls -l CosmoSimPy/CosmoSim
          date
          python3 --version
          python3 CosmoSimPy/datagen.py
