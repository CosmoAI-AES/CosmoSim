name: 'Linux Build'

description: Build the project on Linux

inputs:
  compiler-version:
    default: 10
  python-version:
    required: false
    default: '3.10'



runs:
    using: "composite"

    steps:
      - name: Setup Python 3.x
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
          architecture: 'x64'

      - name: Install prerequisites
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y \
          libgtk2.0-dev \
          libva-dev \
          libvdpau-dev \
          libx11-xcb-dev \
          libfontenc-dev \
          libxaw7-dev \libxkbfile-dev \
          libxmu-dev \
          libxmuu-dev \
          libxpm-dev \
          libxres-dev \
          libxss-dev \
          libxtst-dev \
          libxv-dev \
          libxvmc-dev \
          libxxf86vm-dev \
          libxcb-render-util0-dev \
          libxcb-xkb-dev \
          libxcb-icccm4-dev \
          libxcb-image0-dev \
          libxcb-keysyms1-dev \
          libxcb-randr0-dev \
          libxcb-shape0-dev \
          libxcb-sync-dev \
          libxcb-xfixes0-dev \
          libxcb-xinerama0-dev \
          libxcb-dri3-dev \
          libxcb-util-dev \
          libxcb-util0-dev \
          libxcb-glx0-dev \
          libxcb-cursor-dev \
          libxcb-dri2-0-dev \
          libxcb-present-dev \
          libxcb-composite0-dev \
          libxcb-ewmh-dev \
          libxcb-res0-dev
          sudo pip3 install conan==1.64.1
      - name: Config Conan
        shell: bash
        run: |
          conan profile new default --detect
          conan profile update settings.compiler.libcxx=libstdc++11 default
      - name: Run conan
        shell: bash
        run: |
          conan install . -s build_type=Release -if build -b missing
      - name: Configure and build
        shell: bash
        run: |
          cmake . -B build -DCMAKE_BUILD_TYPE=Release
          cmake --build build
      - name: Make Python Distribution
        shell: bash
        run: |
           mkdir -p dist/CosmoSimPy/CosmoSim
           cp build/lib/CosmoSimPy.*.so dist/CosmoSimPy/CosmoSim/
      - name: Archive Python Application
        uses: actions/upload-artifact@v4
        with:
          name: CosmoSimPy-linux-python${{ inputs.python-version }}
          path: build/lib/CosmoSimPy.*.so
      - name: Test
        shell: bash
        run: |
          pip3 install -r requirements.txt
          cp build/lib/CosmoSimPy.*.so CosmoSimPy/CosmoSim
          python3 CosmoSimPy/datagen.py
