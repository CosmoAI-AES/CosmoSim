
message("CMakeLists.txt - CosmoSim - Starting ...")

cmake_minimum_required(VERSION 3.15)
project(CosmoAi CXX)

add_definitions("-std=c++11")

cmake_host_system_information(RESULT host QUERY HOSTNAME)
# set(host "foobar")
message("Running on ${host}")

if( ${host} MATCHES "idun.*")
	message("IDUN - conan is not available")
	set(CONAN_LIBS "symengine;gmp;mpfr;opencv_core;opencv_imgproc;opencv_imgcodecs;opencv_highgui;opencv_ml;opencv_video;opencv_features2d;opencv_calib3d;opencv_objdetect;opencv_stitching;pthread")
        message("CONAN_LIBS=${CONAN_LIBS}")

	include_directories(AFTER SYSTEM "/cluster/apps/eb/software/OpenCV/4.5.3-foss-2021a-contrib/include/opencv4")
else()
	message("Including conan setup")
      include(${CMAKE_BINARY_DIR}/conanbuildinfo.cmake)
      conan_basic_setup()
endif()

add_executable(makeimage src/makeimage.cpp)
add_executable(Simulator src/Simulator.cpp)
add_library(SimLib 
   src/simaux.cpp 
   src/Source.cpp src/SphericalSource.cpp src/EllipsoidSource.cpp
   src/TriangleSource.cpp
   src/LensModel.cpp src/PointMassLens.cpp src/SphereLens.cpp 
   src/RoulettePMLens.cpp
   src/Window.cpp)


target_link_libraries(makeimage ${CONAN_LIBS} SimLib)
target_link_libraries(Simulator ${CONAN_LIBS} SimLib)
target_link_libraries(SimLib ${CONAN_LIBS})

if(${UNIX})
    set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -Wl,-z,stack-size=1000000")
elseif(${MSVC})
    set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} /STACK:10000000")
else()
    message(FATAL_ERROR "Compiler and system are not supported")
endif()
