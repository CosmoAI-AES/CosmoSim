0:1:1.0*sqrt(f)*g*sqrt(1/(1 - f**2))*sin(p)*asin(y*sqrt(1 - f**2)/sqrt(x**2 + y**2)) - 1.0*sqrt(f)*g*sqrt(1/(1 - f**2))*cos(p)*asinh(x*sqrt(1 - f**2)/(f*sqrt(x**2 + y**2))):-1.0*sqrt(f)*g*sqrt(1/(1 - f**2))*sin(p)*asinh(x*sqrt(1 - f**2)/(f*sqrt(x**2 + y**2))) - 1.0*sqrt(f)*g*sqrt(1/(1 - f**2))*cos(p)*asin(y*sqrt(1 - f**2)/sqrt(x**2 + y**2))
1:0:-0.5*x**2*(sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*sin(p)**2/((x**2 + y**2)*sqrt(f**2*y**2 + x**2)) + sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*cos(p)**2/((x**2 + y**2)*sqrt(f**2*y**2 + x**2))) - 0.5*y**2*(sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*sin(p)**2/((x**2 + y**2)**(3/2)*sqrt(f**2*y**2/(x**2 + y**2) + x**2/(x**2 + y**2))) + sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*cos(p)**2/((x**2 + y**2)**(3/2)*sqrt(f**2*y**2/(x**2 + y**2) + x**2/(x**2 + y**2)))):0
1:2:-0.5*x**2*(sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*sin(p)**2/((x**2 + y**2)*sqrt(f**2*y**2 + x**2)) - sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*cos(p)**2/((x**2 + y**2)*sqrt(f**2*y**2 + x**2))) - 0.5*y**2*(-sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*sin(p)**2/((x**2 + y**2)**(3/2)*sqrt(f**2*y**2/(x**2 + y**2) + x**2/(x**2 + y**2))) - 4*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*sin(p)*cos(p)/((x**2 + y**2)**(3/2)*sqrt(f**2*y**2/(x**2 + y**2) + x**2/(x**2 + y**2))) + sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*cos(p)**2/((x**2 + y**2)**(3/2)*sqrt(f**2*y**2/(x**2 + y**2) + x**2/(x**2 + y**2)))):1.0*sqrt(f)*g*x**2*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*sin(p)*cos(p)/((x**2 + y**2)*sqrt(f**2*y**2 + x**2)) - 0.5*y**2*(-2*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*sin(p)**2/((x**2 + y**2)**(3/2)*sqrt(f**2*y**2/(x**2 + y**2) + x**2/(x**2 + y**2))) + 2*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*sin(p)*cos(p)/((x**2 + y**2)**(3/2)*sqrt(f**2*y**2/(x**2 + y**2) + x**2/(x**2 + y**2))) + 2*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*cos(p)**2/((x**2 + y**2)**(3/2)*sqrt(f**2*y**2/(x**2 + y**2) + x**2/(x**2 + y**2))))
2:1:-0.75*x**2*(-sqrt(f)*g*y*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-2*f**2*y**2 - f**2*(x**2 + y**2) - 2*x**2)*sin(p)**3/((x**2 + y**2)**2*(f**2*y**2 + x**2)**(3/2)) - sqrt(f)*g*y*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-2*f**2*y**2 - f**2*(x**2 + y**2) - 2*x**2)*sin(p)*cos(p)**2/((x**2 + y**2)**2*(f**2*y**2 + x**2)**(3/2))) - 0.75*x*(-sqrt(f)*g*y**2*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-3*x**2 + y**2*(-2*f**2 - 1))*sin(p)**3/((x**2 + y**2)**2*(f**2*y**2 + x**2)**(3/2)) + sqrt(f)*g*y**2*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-3*x**2 + y**2*(-2*f**2 - 1))*sin(p)**2*cos(p)/((x**2 + y**2)**2*(f**2*y**2 + x**2)**(3/2)) - sqrt(f)*g*y**2*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-3*x**2 + y**2*(-2*f**2 - 1))*sin(p)*cos(p)**2/((x**2 + y**2)**2*(f**2*y**2 + x**2)**(3/2)) + sqrt(f)*g*y**2*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-3*x**2 + y**2*(-2*f**2 - 1))*cos(p)**3/((x**2 + y**2)**2*(f**2*y**2 + x**2)**(3/2)) + sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(x**2*(-2*f**2*y**2 - 3*x**2 - y**2) + 2*(x**2 + y**2)*(f**2*y**2 + x**2))*sin(p)**2*cos(p)/((x**2 + y**2)**2*(f**2*y**2 + x**2)**(3/2)) + sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(x**2*(-2*f**2*y**2 - 3*x**2 - y**2) + 2*(x**2 + y**2)*(f**2*y**2 + x**2))*cos(p)**3/((x**2 + y**2)**2*(f**2*y**2 + x**2)**(3/2))):-0.75*x**2*(sqrt(f)*g*y*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-2*f**2*y**2 - f**2*(x**2 + y**2) - 2*x**2)*sin(p)**2*cos(p)/((x**2 + y**2)**2*(f**2*y**2 + x**2)**(3/2)) + sqrt(f)*g*y*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-2*f**2*y**2 - f**2*(x**2 + y**2) - 2*x**2)*cos(p)**3/((x**2 + y**2)**2*(f**2*y**2 + x**2)**(3/2))) - 0.75*x*(sqrt(f)*g*y**2*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-3*x**2 + y**2*(-2*f**2 - 1))*sin(p)**3/((x**2 + y**2)**2*(f**2*y**2 + x**2)**(3/2)) + sqrt(f)*g*y**2*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-3*x**2 + y**2*(-2*f**2 - 1))*sin(p)**2*cos(p)/((x**2 + y**2)**2*(f**2*y**2 + x**2)**(3/2)) + sqrt(f)*g*y**2*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-3*x**2 + y**2*(-2*f**2 - 1))*sin(p)*cos(p)**2/((x**2 + y**2)**2*(f**2*y**2 + x**2)**(3/2)) + sqrt(f)*g*y**2*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-3*x**2 + y**2*(-2*f**2 - 1))*cos(p)**3/((x**2 + y**2)**2*(f**2*y**2 + x**2)**(3/2)) + sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(x**2*(-2*f**2*y**2 - 3*x**2 - y**2) + 2*(x**2 + y**2)*(f**2*y**2 + x**2))*sin(p)**3/((x**2 + y**2)**2*(f**2*y**2 + x**2)**(3/2)) + sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(x**2*(-2*f**2*y**2 - 3*x**2 - y**2) + 2*(x**2 + y**2)*(f**2*y**2 + x**2))*sin(p)*cos(p)**2/((x**2 + y**2)**2*(f**2*y**2 + x**2)**(3/2)))
2:3:-0.25*x**2*(-sqrt(f)*g*y*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-2*f**2*y**2 - f**2*(x**2 + y**2) - 2*x**2)*sin(p)**3/((x**2 + y**2)**2*(f**2*y**2 + x**2)**(3/2)) + 3*sqrt(f)*g*y*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-2*f**2*y**2 - f**2*(x**2 + y**2) - 2*x**2)*sin(p)*cos(p)**2/((x**2 + y**2)**2*(f**2*y**2 + x**2)**(3/2))) - 0.25*x*(3*sqrt(f)*g*y**2*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-3*x**2 + y**2*(-2*f**2 - 1))*sin(p)**3/((x**2 + y**2)**2*(f**2*y**2 + x**2)**(3/2)) - 3*sqrt(f)*g*y**2*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-3*x**2 + y**2*(-2*f**2 - 1))*sin(p)**2*cos(p)/((x**2 + y**2)**2*(f**2*y**2 + x**2)**(3/2)) - 9*sqrt(f)*g*y**2*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-3*x**2 + y**2*(-2*f**2 - 1))*sin(p)*cos(p)**2/((x**2 + y**2)**2*(f**2*y**2 + x**2)**(3/2)) + sqrt(f)*g*y**2*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-3*x**2 + y**2*(-2*f**2 - 1))*cos(p)**3/((x**2 + y**2)**2*(f**2*y**2 + x**2)**(3/2)) + 9*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(x**2*(-2*f**2*y**2 - 3*x**2 - y**2) + 2*(x**2 + y**2)*(f**2*y**2 + x**2))*sin(p)**2*cos(p)/((x**2 + y**2)**2*(f**2*y**2 + x**2)**(3/2)) - 3*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(x**2*(-2*f**2*y**2 - 3*x**2 - y**2) + 2*(x**2 + y**2)*(f**2*y**2 + x**2))*cos(p)**3/((x**2 + y**2)**2*(f**2*y**2 + x**2)**(3/2))):-0.25*x**2*(3*sqrt(f)*g*y*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-2*f**2*y**2 - f**2*(x**2 + y**2) - 2*x**2)*sin(p)**2*cos(p)/((x**2 + y**2)**2*(f**2*y**2 + x**2)**(3/2)) - sqrt(f)*g*y*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-2*f**2*y**2 - f**2*(x**2 + y**2) - 2*x**2)*cos(p)**3/((x**2 + y**2)**2*(f**2*y**2 + x**2)**(3/2))) - 0.25*x*(-sqrt(f)*g*y**2*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-3*x**2 + y**2*(-2*f**2 - 1))*sin(p)**3/((x**2 + y**2)**2*(f**2*y**2 + x**2)**(3/2)) - 9*sqrt(f)*g*y**2*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-3*x**2 + y**2*(-2*f**2 - 1))*sin(p)**2*cos(p)/((x**2 + y**2)**2*(f**2*y**2 + x**2)**(3/2)) + 3*sqrt(f)*g*y**2*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-3*x**2 + y**2*(-2*f**2 - 1))*sin(p)*cos(p)**2/((x**2 + y**2)**2*(f**2*y**2 + x**2)**(3/2)) + 3*sqrt(f)*g*y**2*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-3*x**2 + y**2*(-2*f**2 - 1))*cos(p)**3/((x**2 + y**2)**2*(f**2*y**2 + x**2)**(3/2)) + 3*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(x**2*(-2*f**2*y**2 - 3*x**2 - y**2) + 2*(x**2 + y**2)*(f**2*y**2 + x**2))*sin(p)**3/((x**2 + y**2)**2*(f**2*y**2 + x**2)**(3/2)) - 9*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(x**2*(-2*f**2*y**2 - 3*x**2 - y**2) + 2*(x**2 + y**2)*(f**2*y**2 + x**2))*sin(p)*cos(p)**2/((x**2 + y**2)**2*(f**2*y**2 + x**2)**(3/2)))
3:0:-0.75*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(2*f**4*y**8 - 18*f**2*x**4*y**4 + 2*x**8 + x**6*(-f**2*y**2 - 6*y**2) + x**2*(-6*f**4*y**6 - f**2*y**6))*sin(p)**4/(sqrt(f**2*y**2 + x**2)*(f**4*y**10 + x**10 + x**8*(2*f**2*y**2 + 3*y**2) + x**6*(f**4*y**4 + 6*f**2*y**4 + 3*y**4) + x**4*(3*f**4*y**6 + 6*f**2*y**6 + y**6) + x**2*(3*f**4*y**8 + 2*f**2*y**8))) - 1.5*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(2*f**4*y**8 - 18*f**2*x**4*y**4 + 2*x**8 + x**6*(-f**2*y**2 - 6*y**2) + x**2*(-6*f**4*y**6 - f**2*y**6))*sin(p)**2*cos(p)**2/(sqrt(f**2*y**2 + x**2)*(f**4*y**10 + x**10 + x**8*(2*f**2*y**2 + 3*y**2) + x**6*(f**4*y**4 + 6*f**2*y**4 + 3*y**4) + x**4*(3*f**4*y**6 + 6*f**2*y**6 + y**6) + x**2*(3*f**4*y**8 + 2*f**2*y**8))) - 0.75*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(2*f**4*y**8 - 18*f**2*x**4*y**4 + 2*x**8 + x**6*(-f**2*y**2 - 6*y**2) + x**2*(-6*f**4*y**6 - f**2*y**6))*cos(p)**4/(sqrt(f**2*y**2 + x**2)*(f**4*y**10 + x**10 + x**8*(2*f**2*y**2 + 3*y**2) + x**6*(f**4*y**4 + 6*f**2*y**4 + 3*y**4) + x**4*(3*f**4*y**6 + 6*f**2*y**6 + y**6) + x**2*(3*f**4*y**8 + 2*f**2*y**8))) - 0.375*x**2*(sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(y**2*(3*f**2*(x**2 + y**2)*(2*f**2*y**2 + f**2*(x**2 + y**2) + 2*x**2) + 4*(f**2*y**2 + x**2)*(2*f**2*y**2 + f**2*(x**2 + y**2) + 2*x**2)) - (x**2 + y**2)*(f**2*y**2 + x**2)*(8*f**2*y**2 + f**2*(x**2 + y**2) + 2*x**2))*sin(p)**4/((x**2 + y**2)**3*(f**2*y**2 + x**2)**(5/2)) + 2*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(y**2*(3*f**2*(x**2 + y**2)*(2*f**2*y**2 + f**2*(x**2 + y**2) + 2*x**2) + 4*(f**2*y**2 + x**2)*(2*f**2*y**2 + f**2*(x**2 + y**2) + 2*x**2)) - (x**2 + y**2)*(f**2*y**2 + x**2)*(8*f**2*y**2 + f**2*(x**2 + y**2) + 2*x**2))*sin(p)**2*cos(p)**2/((x**2 + y**2)**3*(f**2*y**2 + x**2)**(5/2)) + sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(y**2*(3*f**2*(x**2 + y**2)*(2*f**2*y**2 + f**2*(x**2 + y**2) + 2*x**2) + 4*(f**2*y**2 + x**2)*(2*f**2*y**2 + f**2*(x**2 + y**2) + 2*x**2)) - (x**2 + y**2)*(f**2*y**2 + x**2)*(8*f**2*y**2 + f**2*(x**2 + y**2) + 2*x**2))*cos(p)**4/((x**2 + y**2)**3*(f**2*y**2 + x**2)**(5/2))) - 0.375*y**2*(sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(x**2*(3*(x**2 + y**2)*(3*x**2 + y**2*(2*f**2 + 1)) + 4*(3*x**2 + y**2*(2*f**2 + 1))*(f**2*y**2 + x**2)) - (x**2 + y**2)*(9*x**2 + y**2*(2*f**2 + 1))*(f**2*y**2 + x**2))*sin(p)**4/((x**2 + y**2)**3*(f**2*y**2 + x**2)**(5/2)) + 2*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(x**2*(3*(x**2 + y**2)*(3*x**2 + y**2*(2*f**2 + 1)) + 4*(3*x**2 + y**2*(2*f**2 + 1))*(f**2*y**2 + x**2)) - (x**2 + y**2)*(9*x**2 + y**2*(2*f**2 + 1))*(f**2*y**2 + x**2))*sin(p)**2*cos(p)**2/((x**2 + y**2)**3*(f**2*y**2 + x**2)**(5/2)) + sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(x**2*(3*(x**2 + y**2)*(3*x**2 + y**2*(2*f**2 + 1)) + 4*(3*x**2 + y**2*(2*f**2 + 1))*(f**2*y**2 + x**2)) - (x**2 + y**2)*(9*x**2 + y**2*(2*f**2 + 1))*(f**2*y**2 + x**2))*cos(p)**4/((x**2 + y**2)**3*(f**2*y**2 + x**2)**(5/2))):0
3:2:-0.5*x**2*(sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(y**2*(3*f**2*(x**2 + y**2)*(2*f**2*y**2 + f**2*(x**2 + y**2) + 2*x**2) + 4*(f**2*y**2 + x**2)*(2*f**2*y**2 + f**2*(x**2 + y**2) + 2*x**2)) - (x**2 + y**2)*(f**2*y**2 + x**2)*(8*f**2*y**2 + f**2*(x**2 + y**2) + 2*x**2))*sin(p)**4/((x**2 + y**2)**3*(f**2*y**2 + x**2)**(5/2)) - sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(y**2*(3*f**2*(x**2 + y**2)*(2*f**2*y**2 + f**2*(x**2 + y**2) + 2*x**2) + 4*(f**2*y**2 + x**2)*(2*f**2*y**2 + f**2*(x**2 + y**2) + 2*x**2)) - (x**2 + y**2)*(f**2*y**2 + x**2)*(8*f**2*y**2 + f**2*(x**2 + y**2) + 2*x**2))*cos(p)**4/((x**2 + y**2)**3*(f**2*y**2 + x**2)**(5/2))) - 0.5*x*(-4*sqrt(f)*g*y*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(x**2*(3*(x**2 + y**2)*(2*f**2*y**2 + f**2*(x**2 + y**2) + 2*x**2) + 4*(f**2*y**2 + x**2)*(2*f**2*y**2 + f**2*(x**2 + y**2) + 2*x**2)) - 2*(x**2 + y**2)*(f**2*y**2 + x**2)*(2*f**2*y**2 + f**2*(x**2 + y**2) + x**2*(f**2 + 4)))*sin(p)**3*cos(p)/((x**2 + y**2)**3*(f**2*y**2 + x**2)**(5/2)) - 4*sqrt(f)*g*y*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(x**2*(3*(x**2 + y**2)*(2*f**2*y**2 + f**2*(x**2 + y**2) + 2*x**2) + 4*(f**2*y**2 + x**2)*(2*f**2*y**2 + f**2*(x**2 + y**2) + 2*x**2)) - 2*(x**2 + y**2)*(f**2*y**2 + x**2)*(2*f**2*y**2 + f**2*(x**2 + y**2) + x**2*(f**2 + 4)))*sin(p)*cos(p)**3/((x**2 + y**2)**3*(f**2*y**2 + x**2)**(5/2))) - 0.5*y**2*(-sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(x**2*(3*(x**2 + y**2)*(3*x**2 + y**2*(2*f**2 + 1)) + 4*(3*x**2 + y**2*(2*f**2 + 1))*(f**2*y**2 + x**2)) - (x**2 + y**2)*(9*x**2 + y**2*(2*f**2 + 1))*(f**2*y**2 + x**2))*sin(p)**4/((x**2 + y**2)**3*(f**2*y**2 + x**2)**(5/2)) - 4*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(x**2*(3*(x**2 + y**2)*(3*x**2 + y**2*(2*f**2 + 1)) + 4*(3*x**2 + y**2*(2*f**2 + 1))*(f**2*y**2 + x**2)) - (x**2 + y**2)*(9*x**2 + y**2*(2*f**2 + 1))*(f**2*y**2 + x**2))*sin(p)**3*cos(p)/((x**2 + y**2)**3*(f**2*y**2 + x**2)**(5/2)) - 4*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(x**2*(3*(x**2 + y**2)*(3*x**2 + y**2*(2*f**2 + 1)) + 4*(3*x**2 + y**2*(2*f**2 + 1))*(f**2*y**2 + x**2)) - (x**2 + y**2)*(9*x**2 + y**2*(2*f**2 + 1))*(f**2*y**2 + x**2))*sin(p)*cos(p)**3/((x**2 + y**2)**3*(f**2*y**2 + x**2)**(5/2)) + sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(x**2*(3*(x**2 + y**2)*(3*x**2 + y**2*(2*f**2 + 1)) + 4*(3*x**2 + y**2*(2*f**2 + 1))*(f**2*y**2 + x**2)) - (x**2 + y**2)*(9*x**2 + y**2*(2*f**2 + 1))*(f**2*y**2 + x**2))*cos(p)**4/((x**2 + y**2)**3*(f**2*y**2 + x**2)**(5/2))):-0.5*x**2*(-2*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(y**2*(3*f**2*(x**2 + y**2)*(2*f**2*y**2 + f**2*(x**2 + y**2) + 2*x**2) + 4*(f**2*y**2 + x**2)*(2*f**2*y**2 + f**2*(x**2 + y**2) + 2*x**2)) - (x**2 + y**2)*(f**2*y**2 + x**2)*(8*f**2*y**2 + f**2*(x**2 + y**2) + 2*x**2))*sin(p)**3*cos(p)/((x**2 + y**2)**3*(f**2*y**2 + x**2)**(5/2)) - 2*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(y**2*(3*f**2*(x**2 + y**2)*(2*f**2*y**2 + f**2*(x**2 + y**2) + 2*x**2) + 4*(f**2*y**2 + x**2)*(2*f**2*y**2 + f**2*(x**2 + y**2) + 2*x**2)) - (x**2 + y**2)*(f**2*y**2 + x**2)*(8*f**2*y**2 + f**2*(x**2 + y**2) + 2*x**2))*sin(p)*cos(p)**3/((x**2 + y**2)**3*(f**2*y**2 + x**2)**(5/2))) - 0.5*x*(-2*sqrt(f)*g*y*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(x**2*(3*(x**2 + y**2)*(2*f**2*y**2 + f**2*(x**2 + y**2) + 2*x**2) + 4*(f**2*y**2 + x**2)*(2*f**2*y**2 + f**2*(x**2 + y**2) + 2*x**2)) - 2*(x**2 + y**2)*(f**2*y**2 + x**2)*(2*f**2*y**2 + f**2*(x**2 + y**2) + x**2*(f**2 + 4)))*sin(p)**4/((x**2 + y**2)**3*(f**2*y**2 + x**2)**(5/2)) + 2*sqrt(f)*g*y*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(x**2*(3*(x**2 + y**2)*(2*f**2*y**2 + f**2*(x**2 + y**2) + 2*x**2) + 4*(f**2*y**2 + x**2)*(2*f**2*y**2 + f**2*(x**2 + y**2) + 2*x**2)) - 2*(x**2 + y**2)*(f**2*y**2 + x**2)*(2*f**2*y**2 + f**2*(x**2 + y**2) + x**2*(f**2 + 4)))*cos(p)**4/((x**2 + y**2)**3*(f**2*y**2 + x**2)**(5/2))) - 0.5*y**2*(-2*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(x**2*(3*(x**2 + y**2)*(3*x**2 + y**2*(2*f**2 + 1)) + 4*(3*x**2 + y**2*(2*f**2 + 1))*(f**2*y**2 + x**2)) - (x**2 + y**2)*(9*x**2 + y**2*(2*f**2 + 1))*(f**2*y**2 + x**2))*sin(p)**4/((x**2 + y**2)**3*(f**2*y**2 + x**2)**(5/2)) + 2*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(x**2*(3*(x**2 + y**2)*(3*x**2 + y**2*(2*f**2 + 1)) + 4*(3*x**2 + y**2*(2*f**2 + 1))*(f**2*y**2 + x**2)) - (x**2 + y**2)*(9*x**2 + y**2*(2*f**2 + 1))*(f**2*y**2 + x**2))*sin(p)**3*cos(p)/((x**2 + y**2)**3*(f**2*y**2 + x**2)**(5/2)) + 2*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(x**2*(3*(x**2 + y**2)*(3*x**2 + y**2*(2*f**2 + 1)) + 4*(3*x**2 + y**2*(2*f**2 + 1))*(f**2*y**2 + x**2)) - (x**2 + y**2)*(9*x**2 + y**2*(2*f**2 + 1))*(f**2*y**2 + x**2))*sin(p)*cos(p)**3/((x**2 + y**2)**3*(f**2*y**2 + x**2)**(5/2)) + 2*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(x**2*(3*(x**2 + y**2)*(3*x**2 + y**2*(2*f**2 + 1)) + 4*(3*x**2 + y**2*(2*f**2 + 1))*(f**2*y**2 + x**2)) - (x**2 + y**2)*(9*x**2 + y**2*(2*f**2 + 1))*(f**2*y**2 + x**2))*cos(p)**4/((x**2 + y**2)**3*(f**2*y**2 + x**2)**(5/2)))
3:4:0.75*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(2*f**4*y**8 - 18*f**2*x**4*y**4 + 2*x**8 + x**6*(-f**2*y**2 - 6*y**2) + x**2*(-6*f**4*y**6 - f**2*y**6))*sin(p)**4/(sqrt(f**2*y**2 + x**2)*(f**4*y**10 + x**10 + x**8*(2*f**2*y**2 + 3*y**2) + x**6*(f**4*y**4 + 6*f**2*y**4 + 3*y**4) + x**4*(3*f**4*y**6 + 6*f**2*y**6 + y**6) + x**2*(3*f**4*y**8 + 2*f**2*y**8))) - 4.5*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(2*f**4*y**8 - 18*f**2*x**4*y**4 + 2*x**8 + x**6*(-f**2*y**2 - 6*y**2) + x**2*(-6*f**4*y**6 - f**2*y**6))*sin(p)**2*cos(p)**2/(sqrt(f**2*y**2 + x**2)*(f**4*y**10 + x**10 + x**8*(2*f**2*y**2 + 3*y**2) + x**6*(f**4*y**4 + 6*f**2*y**4 + 3*y**4) + x**4*(3*f**4*y**6 + 6*f**2*y**6 + y**6) + x**2*(3*f**4*y**8 + 2*f**2*y**8))) + 0.75*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(2*f**4*y**8 - 18*f**2*x**4*y**4 + 2*x**8 + x**6*(-f**2*y**2 - 6*y**2) + x**2*(-6*f**4*y**6 - f**2*y**6))*cos(p)**4/(sqrt(f**2*y**2 + x**2)*(f**4*y**10 + x**10 + x**8*(2*f**2*y**2 + 3*y**2) + x**6*(f**4*y**4 + 6*f**2*y**4 + 3*y**4) + x**4*(3*f**4*y**6 + 6*f**2*y**6 + y**6) + x**2*(3*f**4*y**8 + 2*f**2*y**8))) - 0.125*x**2*(sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(y**2*(3*f**2*(x**2 + y**2)*(2*f**2*y**2 + f**2*(x**2 + y**2) + 2*x**2) + 4*(f**2*y**2 + x**2)*(2*f**2*y**2 + f**2*(x**2 + y**2) + 2*x**2)) - (x**2 + y**2)*(f**2*y**2 + x**2)*(8*f**2*y**2 + f**2*(x**2 + y**2) + 2*x**2))*sin(p)**4/((x**2 + y**2)**3*(f**2*y**2 + x**2)**(5/2)) - 6*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(y**2*(3*f**2*(x**2 + y**2)*(2*f**2*y**2 + f**2*(x**2 + y**2) + 2*x**2) + 4*(f**2*y**2 + x**2)*(2*f**2*y**2 + f**2*(x**2 + y**2) + 2*x**2)) - (x**2 + y**2)*(f**2*y**2 + x**2)*(8*f**2*y**2 + f**2*(x**2 + y**2) + 2*x**2))*sin(p)**2*cos(p)**2/((x**2 + y**2)**3*(f**2*y**2 + x**2)**(5/2)) + sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(y**2*(3*f**2*(x**2 + y**2)*(2*f**2*y**2 + f**2*(x**2 + y**2) + 2*x**2) + 4*(f**2*y**2 + x**2)*(2*f**2*y**2 + f**2*(x**2 + y**2) + 2*x**2)) - (x**2 + y**2)*(f**2*y**2 + x**2)*(8*f**2*y**2 + f**2*(x**2 + y**2) + 2*x**2))*cos(p)**4/((x**2 + y**2)**3*(f**2*y**2 + x**2)**(5/2))) - 0.125*x*(-16*sqrt(f)*g*y*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(x**2*(3*(x**2 + y**2)*(2*f**2*y**2 + f**2*(x**2 + y**2) + 2*x**2) + 4*(f**2*y**2 + x**2)*(2*f**2*y**2 + f**2*(x**2 + y**2) + 2*x**2)) - 2*(x**2 + y**2)*(f**2*y**2 + x**2)*(2*f**2*y**2 + f**2*(x**2 + y**2) + x**2*(f**2 + 4)))*sin(p)**3*cos(p)/((x**2 + y**2)**3*(f**2*y**2 + x**2)**(5/2)) + 16*sqrt(f)*g*y*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(x**2*(3*(x**2 + y**2)*(2*f**2*y**2 + f**2*(x**2 + y**2) + 2*x**2) + 4*(f**2*y**2 + x**2)*(2*f**2*y**2 + f**2*(x**2 + y**2) + 2*x**2)) - 2*(x**2 + y**2)*(f**2*y**2 + x**2)*(2*f**2*y**2 + f**2*(x**2 + y**2) + x**2*(f**2 + 4)))*sin(p)*cos(p)**3/((x**2 + y**2)**3*(f**2*y**2 + x**2)**(5/2))) - 0.125*y**2*(sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(x**2*(3*(x**2 + y**2)*(3*x**2 + y**2*(2*f**2 + 1)) + 4*(3*x**2 + y**2*(2*f**2 + 1))*(f**2*y**2 + x**2)) - (x**2 + y**2)*(9*x**2 + y**2*(2*f**2 + 1))*(f**2*y**2 + x**2))*sin(p)**4/((x**2 + y**2)**3*(f**2*y**2 + x**2)**(5/2)) + 16*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(x**2*(3*(x**2 + y**2)*(3*x**2 + y**2*(2*f**2 + 1)) + 4*(3*x**2 + y**2*(2*f**2 + 1))*(f**2*y**2 + x**2)) - (x**2 + y**2)*(9*x**2 + y**2*(2*f**2 + 1))*(f**2*y**2 + x**2))*sin(p)**3*cos(p)/((x**2 + y**2)**3*(f**2*y**2 + x**2)**(5/2)) - 6*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(x**2*(3*(x**2 + y**2)*(3*x**2 + y**2*(2*f**2 + 1)) + 4*(3*x**2 + y**2*(2*f**2 + 1))*(f**2*y**2 + x**2)) - (x**2 + y**2)*(9*x**2 + y**2*(2*f**2 + 1))*(f**2*y**2 + x**2))*sin(p)**2*cos(p)**2/((x**2 + y**2)**3*(f**2*y**2 + x**2)**(5/2)) - 16*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(x**2*(3*(x**2 + y**2)*(3*x**2 + y**2*(2*f**2 + 1)) + 4*(3*x**2 + y**2*(2*f**2 + 1))*(f**2*y**2 + x**2)) - (x**2 + y**2)*(9*x**2 + y**2*(2*f**2 + 1))*(f**2*y**2 + x**2))*sin(p)*cos(p)**3/((x**2 + y**2)**3*(f**2*y**2 + x**2)**(5/2)) + sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(x**2*(3*(x**2 + y**2)*(3*x**2 + y**2*(2*f**2 + 1)) + 4*(3*x**2 + y**2*(2*f**2 + 1))*(f**2*y**2 + x**2)) - (x**2 + y**2)*(9*x**2 + y**2*(2*f**2 + 1))*(f**2*y**2 + x**2))*cos(p)**4/((x**2 + y**2)**3*(f**2*y**2 + x**2)**(5/2))):-3.0*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(2*f**4*y**8 - 18*f**2*x**4*y**4 + 2*x**8 + x**6*(-f**2*y**2 - 6*y**2) + x**2*(-6*f**4*y**6 - f**2*y**6))*sin(p)**3*cos(p)/(sqrt(f**2*y**2 + x**2)*(f**4*y**10 + x**10 + x**8*(2*f**2*y**2 + 3*y**2) + x**6*(f**4*y**4 + 6*f**2*y**4 + 3*y**4) + x**4*(3*f**4*y**6 + 6*f**2*y**6 + y**6) + x**2*(3*f**4*y**8 + 2*f**2*y**8))) + 3.0*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(2*f**4*y**8 - 18*f**2*x**4*y**4 + 2*x**8 + x**6*(-f**2*y**2 - 6*y**2) + x**2*(-6*f**4*y**6 - f**2*y**6))*sin(p)*cos(p)**3/(sqrt(f**2*y**2 + x**2)*(f**4*y**10 + x**10 + x**8*(2*f**2*y**2 + 3*y**2) + x**6*(f**4*y**4 + 6*f**2*y**4 + 3*y**4) + x**4*(3*f**4*y**6 + 6*f**2*y**6 + y**6) + x**2*(3*f**4*y**8 + 2*f**2*y**8))) - 0.125*x**2*(-4*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(y**2*(3*f**2*(x**2 + y**2)*(2*f**2*y**2 + f**2*(x**2 + y**2) + 2*x**2) + 4*(f**2*y**2 + x**2)*(2*f**2*y**2 + f**2*(x**2 + y**2) + 2*x**2)) - (x**2 + y**2)*(f**2*y**2 + x**2)*(8*f**2*y**2 + f**2*(x**2 + y**2) + 2*x**2))*sin(p)**3*cos(p)/((x**2 + y**2)**3*(f**2*y**2 + x**2)**(5/2)) + 4*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(y**2*(3*f**2*(x**2 + y**2)*(2*f**2*y**2 + f**2*(x**2 + y**2) + 2*x**2) + 4*(f**2*y**2 + x**2)*(2*f**2*y**2 + f**2*(x**2 + y**2) + 2*x**2)) - (x**2 + y**2)*(f**2*y**2 + x**2)*(8*f**2*y**2 + f**2*(x**2 + y**2) + 2*x**2))*sin(p)*cos(p)**3/((x**2 + y**2)**3*(f**2*y**2 + x**2)**(5/2))) - 0.125*x*(-4*sqrt(f)*g*y*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(x**2*(3*(x**2 + y**2)*(2*f**2*y**2 + f**2*(x**2 + y**2) + 2*x**2) + 4*(f**2*y**2 + x**2)*(2*f**2*y**2 + f**2*(x**2 + y**2) + 2*x**2)) - 2*(x**2 + y**2)*(f**2*y**2 + x**2)*(2*f**2*y**2 + f**2*(x**2 + y**2) + x**2*(f**2 + 4)))*sin(p)**4/((x**2 + y**2)**3*(f**2*y**2 + x**2)**(5/2)) + 24*sqrt(f)*g*y*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(x**2*(3*(x**2 + y**2)*(2*f**2*y**2 + f**2*(x**2 + y**2) + 2*x**2) + 4*(f**2*y**2 + x**2)*(2*f**2*y**2 + f**2*(x**2 + y**2) + 2*x**2)) - 2*(x**2 + y**2)*(f**2*y**2 + x**2)*(2*f**2*y**2 + f**2*(x**2 + y**2) + x**2*(f**2 + 4)))*sin(p)**2*cos(p)**2/((x**2 + y**2)**3*(f**2*y**2 + x**2)**(5/2)) - 4*sqrt(f)*g*y*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(x**2*(3*(x**2 + y**2)*(2*f**2*y**2 + f**2*(x**2 + y**2) + 2*x**2) + 4*(f**2*y**2 + x**2)*(2*f**2*y**2 + f**2*(x**2 + y**2) + 2*x**2)) - 2*(x**2 + y**2)*(f**2*y**2 + x**2)*(2*f**2*y**2 + f**2*(x**2 + y**2) + x**2*(f**2 + 4)))*cos(p)**4/((x**2 + y**2)**3*(f**2*y**2 + x**2)**(5/2))) - 0.125*y**2*(4*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(x**2*(3*(x**2 + y**2)*(3*x**2 + y**2*(2*f**2 + 1)) + 4*(3*x**2 + y**2*(2*f**2 + 1))*(f**2*y**2 + x**2)) - (x**2 + y**2)*(9*x**2 + y**2*(2*f**2 + 1))*(f**2*y**2 + x**2))*sin(p)**4/((x**2 + y**2)**3*(f**2*y**2 + x**2)**(5/2)) - 4*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(x**2*(3*(x**2 + y**2)*(3*x**2 + y**2*(2*f**2 + 1)) + 4*(3*x**2 + y**2*(2*f**2 + 1))*(f**2*y**2 + x**2)) - (x**2 + y**2)*(9*x**2 + y**2*(2*f**2 + 1))*(f**2*y**2 + x**2))*sin(p)**3*cos(p)/((x**2 + y**2)**3*(f**2*y**2 + x**2)**(5/2)) - 24*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(x**2*(3*(x**2 + y**2)*(3*x**2 + y**2*(2*f**2 + 1)) + 4*(3*x**2 + y**2*(2*f**2 + 1))*(f**2*y**2 + x**2)) - (x**2 + y**2)*(9*x**2 + y**2*(2*f**2 + 1))*(f**2*y**2 + x**2))*sin(p)**2*cos(p)**2/((x**2 + y**2)**3*(f**2*y**2 + x**2)**(5/2)) + 4*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(x**2*(3*(x**2 + y**2)*(3*x**2 + y**2*(2*f**2 + 1)) + 4*(3*x**2 + y**2*(2*f**2 + 1))*(f**2*y**2 + x**2)) - (x**2 + y**2)*(9*x**2 + y**2*(2*f**2 + 1))*(f**2*y**2 + x**2))*sin(p)*cos(p)**3/((x**2 + y**2)**3*(f**2*y**2 + x**2)**(5/2)) + 4*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(x**2*(3*(x**2 + y**2)*(3*x**2 + y**2*(2*f**2 + 1)) + 4*(3*x**2 + y**2*(2*f**2 + 1))*(f**2*y**2 + x**2)) - (x**2 + y**2)*(9*x**2 + y**2*(2*f**2 + 1))*(f**2*y**2 + x**2))*cos(p)**4/((x**2 + y**2)**3*(f**2*y**2 + x**2)**(5/2)))
4:1:-0.625*x**2*(-3*sqrt(f)*g*y*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-20*f**6*y**8 + x**8*(3*f**4 + 4*f**2 + 8) + x**6*(-2*f**6*y**2 + 11*f**4*y**2 + 24*f**2*y**2 - 8*y**2) + x**4*(-8*f**6*y**4 + 21*f**4*y**4 - 28*f**2*y**4) + x**2*(-10*f**6*y**6 - 35*f**4*y**6))*sin(p)**5/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) - 6*sqrt(f)*g*y*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-20*f**6*y**8 + x**8*(3*f**4 + 4*f**2 + 8) + x**6*(-2*f**6*y**2 + 11*f**4*y**2 + 24*f**2*y**2 - 8*y**2) + x**4*(-8*f**6*y**4 + 21*f**4*y**4 - 28*f**2*y**4) + x**2*(-10*f**6*y**6 - 35*f**4*y**6))*sin(p)**3*cos(p)**2/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) - 3*sqrt(f)*g*y*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-20*f**6*y**8 + x**8*(3*f**4 + 4*f**2 + 8) + x**6*(-2*f**6*y**2 + 11*f**4*y**2 + 24*f**2*y**2 - 8*y**2) + x**4*(-8*f**6*y**4 + 21*f**4*y**4 - 28*f**2*y**4) + x**2*(-10*f**6*y**6 - 35*f**4*y**6))*sin(p)*cos(p)**4/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12)))) - 0.625*x*(-3*sqrt(f)*g*y**2*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-20*x**8 + x**6*(-35*f**2*y**2 - 10*y**2) + x**4*(-28*f**4*y**4 + 21*f**2*y**4 - 8*y**4) + x**2*(-8*f**6*y**6 + 24*f**4*y**6 + 11*f**2*y**6 - 2*y**6) + y**8*(8*f**6 + 4*f**4 + 3*f**2))*sin(p)**5/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) + 3*sqrt(f)*g*y**2*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-20*x**8 + x**6*(-35*f**2*y**2 - 10*y**2) + x**4*(-28*f**4*y**4 + 21*f**2*y**4 - 8*y**4) + x**2*(-8*f**6*y**6 + 24*f**4*y**6 + 11*f**2*y**6 - 2*y**6) + y**8*(8*f**6 + 4*f**4 + 3*f**2))*sin(p)**4*cos(p)/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) - 6*sqrt(f)*g*y**2*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-20*x**8 + x**6*(-35*f**2*y**2 - 10*y**2) + x**4*(-28*f**4*y**4 + 21*f**2*y**4 - 8*y**4) + x**2*(-8*f**6*y**6 + 24*f**4*y**6 + 11*f**2*y**6 - 2*y**6) + y**8*(8*f**6 + 4*f**4 + 3*f**2))*sin(p)**3*cos(p)**2/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) + 6*sqrt(f)*g*y**2*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-20*x**8 + x**6*(-35*f**2*y**2 - 10*y**2) + x**4*(-28*f**4*y**4 + 21*f**2*y**4 - 8*y**4) + x**2*(-8*f**6*y**6 + 24*f**4*y**6 + 11*f**2*y**6 - 2*y**6) + y**8*(8*f**6 + 4*f**4 + 3*f**2))*sin(p)**2*cos(p)**3/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) - 3*sqrt(f)*g*y**2*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-20*x**8 + x**6*(-35*f**2*y**2 - 10*y**2) + x**4*(-28*f**4*y**4 + 21*f**2*y**4 - 8*y**4) + x**2*(-8*f**6*y**6 + 24*f**4*y**6 + 11*f**2*y**6 - 2*y**6) + y**8*(8*f**6 + 4*f**4 + 3*f**2))*sin(p)*cos(p)**4/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) + 3*sqrt(f)*g*y**2*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-20*x**8 + x**6*(-35*f**2*y**2 - 10*y**2) + x**4*(-28*f**4*y**4 + 21*f**2*y**4 - 8*y**4) + x**2*(-8*f**6*y**6 + 24*f**4*y**6 + 11*f**2*y**6 - 2*y**6) + y**8*(8*f**6 + 4*f**4 + 3*f**2))*cos(p)**5/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) + 3*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(8*f**6*y**10 + x**10*(f**2 + 2) + x**8*(-4*f**4*y**2 + f**2*y**2 - 12*y**2) + x**6*(-16*f**4*y**4 - 41*f**2*y**4 + 2*y**4) + x**4*(-52*f**4*y**6 + 7*f**2*y**6) + x**2*(-8*f**6*y**8 + 8*f**4*y**8))*sin(p)**4*cos(p)/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) + 6*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(8*f**6*y**10 + x**10*(f**2 + 2) + x**8*(-4*f**4*y**2 + f**2*y**2 - 12*y**2) + x**6*(-16*f**4*y**4 - 41*f**2*y**4 + 2*y**4) + x**4*(-52*f**4*y**6 + 7*f**2*y**6) + x**2*(-8*f**6*y**8 + 8*f**4*y**8))*sin(p)**2*cos(p)**3/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) + 3*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(8*f**6*y**10 + x**10*(f**2 + 2) + x**8*(-4*f**4*y**2 + f**2*y**2 - 12*y**2) + x**6*(-16*f**4*y**4 - 41*f**2*y**4 + 2*y**4) + x**4*(-52*f**4*y**6 + 7*f**2*y**6) + x**2*(-8*f**6*y**8 + 8*f**4*y**8))*cos(p)**5/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) + 6*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-2*x**14 + x**12*(-f**2*y**2 + 12*y**2) + x**10*(4*f**4*y**4 + 71*f**2*y**4 - 2*y**4) + x**8*(3*f**6*y**6 + 134*f**4*y**6 - 7*f**2*y**6) + x**6*(111*f**6*y**8 - 32*f**4*y**8 + f**2*y**8) + x**4*(44*f**8*y**10 - 59*f**6*y**10 - 2*f**4*y**10) + x**2*(8*f**10*y**12 - 40*f**8*y**12 - 7*f**6*y**12) + y**14*(-8*f**10 - 4*f**8))*sin(p)**4*cos(p)/(sqrt(f**2*y**2 + x**2)*(f**10*y**18 + x**18 + x**16*(5*f**2*y**2 + 4*y**2) + x**14*(10*f**4*y**4 + 20*f**2*y**4 + 6*y**4) + x**12*(10*f**6*y**6 + 40*f**4*y**6 + 30*f**2*y**6 + 4*y**6) + x**10*(5*f**8*y**8 + 40*f**6*y**8 + 60*f**4*y**8 + 20*f**2*y**8 + y**8) + x**8*(f**10*y**10 + 20*f**8*y**10 + 60*f**6*y**10 + 40*f**4*y**10 + 5*f**2*y**10) + x**6*(4*f**10*y**12 + 30*f**8*y**12 + 40*f**6*y**12 + 10*f**4*y**12) + x**4*(6*f**10*y**14 + 20*f**8*y**14 + 10*f**6*y**14) + x**2*(4*f**10*y**16 + 5*f**8*y**16))) + 12*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-2*x**14 + x**12*(-f**2*y**2 + 12*y**2) + x**10*(4*f**4*y**4 + 71*f**2*y**4 - 2*y**4) + x**8*(3*f**6*y**6 + 134*f**4*y**6 - 7*f**2*y**6) + x**6*(111*f**6*y**8 - 32*f**4*y**8 + f**2*y**8) + x**4*(44*f**8*y**10 - 59*f**6*y**10 - 2*f**4*y**10) + x**2*(8*f**10*y**12 - 40*f**8*y**12 - 7*f**6*y**12) + y**14*(-8*f**10 - 4*f**8))*sin(p)**2*cos(p)**3/(sqrt(f**2*y**2 + x**2)*(f**10*y**18 + x**18 + x**16*(5*f**2*y**2 + 4*y**2) + x**14*(10*f**4*y**4 + 20*f**2*y**4 + 6*y**4) + x**12*(10*f**6*y**6 + 40*f**4*y**6 + 30*f**2*y**6 + 4*y**6) + x**10*(5*f**8*y**8 + 40*f**6*y**8 + 60*f**4*y**8 + 20*f**2*y**8 + y**8) + x**8*(f**10*y**10 + 20*f**8*y**10 + 60*f**6*y**10 + 40*f**4*y**10 + 5*f**2*y**10) + x**6*(4*f**10*y**12 + 30*f**8*y**12 + 40*f**6*y**12 + 10*f**4*y**12) + x**4*(6*f**10*y**14 + 20*f**8*y**14 + 10*f**6*y**14) + x**2*(4*f**10*y**16 + 5*f**8*y**16))) + 6*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-2*x**14 + x**12*(-f**2*y**2 + 12*y**2) + x**10*(4*f**4*y**4 + 71*f**2*y**4 - 2*y**4) + x**8*(3*f**6*y**6 + 134*f**4*y**6 - 7*f**2*y**6) + x**6*(111*f**6*y**8 - 32*f**4*y**8 + f**2*y**8) + x**4*(44*f**8*y**10 - 59*f**6*y**10 - 2*f**4*y**10) + x**2*(8*f**10*y**12 - 40*f**8*y**12 - 7*f**6*y**12) + y**14*(-8*f**10 - 4*f**8))*cos(p)**5/(sqrt(f**2*y**2 + x**2)*(f**10*y**18 + x**18 + x**16*(5*f**2*y**2 + 4*y**2) + x**14*(10*f**4*y**4 + 20*f**2*y**4 + 6*y**4) + x**12*(10*f**6*y**6 + 40*f**4*y**6 + 30*f**2*y**6 + 4*y**6) + x**10*(5*f**8*y**8 + 40*f**6*y**8 + 60*f**4*y**8 + 20*f**2*y**8 + y**8) + x**8*(f**10*y**10 + 20*f**8*y**10 + 60*f**6*y**10 + 40*f**4*y**10 + 5*f**2*y**10) + x**6*(4*f**10*y**12 + 30*f**8*y**12 + 40*f**6*y**12 + 10*f**4*y**12) + x**4*(6*f**10*y**14 + 20*f**8*y**14 + 10*f**6*y**14) + x**2*(4*f**10*y**16 + 5*f**8*y**16)))) - 0.625*y*(-6*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-2*f**6*y**10 + x**10*(-4*f**2 - 8) + x**8*(f**4*y**2 - 24*f**2*y**2 + 8*y**2) + x**6*(-3*f**4*y**4 + 28*f**2*y**4) + x**4*(-2*f**6*y**6 + 47*f**4*y**6) + x**2*(12*f**6*y**8 + 3*f**4*y**8))*sin(p)**5/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) - 12*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-2*f**6*y**10 + x**10*(-4*f**2 - 8) + x**8*(f**4*y**2 - 24*f**2*y**2 + 8*y**2) + x**6*(-3*f**4*y**4 + 28*f**2*y**4) + x**4*(-2*f**6*y**6 + 47*f**4*y**6) + x**2*(12*f**6*y**8 + 3*f**4*y**8))*sin(p)**3*cos(p)**2/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) - 6*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-2*f**6*y**10 + x**10*(-4*f**2 - 8) + x**8*(f**4*y**2 - 24*f**2*y**2 + 8*y**2) + x**6*(-3*f**4*y**4 + 28*f**2*y**4) + x**4*(-2*f**6*y**6 + 47*f**4*y**6) + x**2*(12*f**6*y**8 + 3*f**4*y**8))*sin(p)*cos(p)**4/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12)))):-0.625*x**2*(3*sqrt(f)*g*y*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-20*f**6*y**8 + x**8*(3*f**4 + 4*f**2 + 8) + x**6*(-2*f**6*y**2 + 11*f**4*y**2 + 24*f**2*y**2 - 8*y**2) + x**4*(-8*f**6*y**4 + 21*f**4*y**4 - 28*f**2*y**4) + x**2*(-10*f**6*y**6 - 35*f**4*y**6))*sin(p)**4*cos(p)/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) + 6*sqrt(f)*g*y*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-20*f**6*y**8 + x**8*(3*f**4 + 4*f**2 + 8) + x**6*(-2*f**6*y**2 + 11*f**4*y**2 + 24*f**2*y**2 - 8*y**2) + x**4*(-8*f**6*y**4 + 21*f**4*y**4 - 28*f**2*y**4) + x**2*(-10*f**6*y**6 - 35*f**4*y**6))*sin(p)**2*cos(p)**3/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) + 3*sqrt(f)*g*y*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-20*f**6*y**8 + x**8*(3*f**4 + 4*f**2 + 8) + x**6*(-2*f**6*y**2 + 11*f**4*y**2 + 24*f**2*y**2 - 8*y**2) + x**4*(-8*f**6*y**4 + 21*f**4*y**4 - 28*f**2*y**4) + x**2*(-10*f**6*y**6 - 35*f**4*y**6))*cos(p)**5/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12)))) - 0.625*x*(3*sqrt(f)*g*y**2*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-20*x**8 + x**6*(-35*f**2*y**2 - 10*y**2) + x**4*(-28*f**4*y**4 + 21*f**2*y**4 - 8*y**4) + x**2*(-8*f**6*y**6 + 24*f**4*y**6 + 11*f**2*y**6 - 2*y**6) + y**8*(8*f**6 + 4*f**4 + 3*f**2))*sin(p)**5/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) + 3*sqrt(f)*g*y**2*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-20*x**8 + x**6*(-35*f**2*y**2 - 10*y**2) + x**4*(-28*f**4*y**4 + 21*f**2*y**4 - 8*y**4) + x**2*(-8*f**6*y**6 + 24*f**4*y**6 + 11*f**2*y**6 - 2*y**6) + y**8*(8*f**6 + 4*f**4 + 3*f**2))*sin(p)**4*cos(p)/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) + 6*sqrt(f)*g*y**2*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-20*x**8 + x**6*(-35*f**2*y**2 - 10*y**2) + x**4*(-28*f**4*y**4 + 21*f**2*y**4 - 8*y**4) + x**2*(-8*f**6*y**6 + 24*f**4*y**6 + 11*f**2*y**6 - 2*y**6) + y**8*(8*f**6 + 4*f**4 + 3*f**2))*sin(p)**3*cos(p)**2/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) + 6*sqrt(f)*g*y**2*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-20*x**8 + x**6*(-35*f**2*y**2 - 10*y**2) + x**4*(-28*f**4*y**4 + 21*f**2*y**4 - 8*y**4) + x**2*(-8*f**6*y**6 + 24*f**4*y**6 + 11*f**2*y**6 - 2*y**6) + y**8*(8*f**6 + 4*f**4 + 3*f**2))*sin(p)**2*cos(p)**3/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) + 3*sqrt(f)*g*y**2*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-20*x**8 + x**6*(-35*f**2*y**2 - 10*y**2) + x**4*(-28*f**4*y**4 + 21*f**2*y**4 - 8*y**4) + x**2*(-8*f**6*y**6 + 24*f**4*y**6 + 11*f**2*y**6 - 2*y**6) + y**8*(8*f**6 + 4*f**4 + 3*f**2))*sin(p)*cos(p)**4/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) + 3*sqrt(f)*g*y**2*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-20*x**8 + x**6*(-35*f**2*y**2 - 10*y**2) + x**4*(-28*f**4*y**4 + 21*f**2*y**4 - 8*y**4) + x**2*(-8*f**6*y**6 + 24*f**4*y**6 + 11*f**2*y**6 - 2*y**6) + y**8*(8*f**6 + 4*f**4 + 3*f**2))*cos(p)**5/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) + 3*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(8*f**6*y**10 + x**10*(f**2 + 2) + x**8*(-4*f**4*y**2 + f**2*y**2 - 12*y**2) + x**6*(-16*f**4*y**4 - 41*f**2*y**4 + 2*y**4) + x**4*(-52*f**4*y**6 + 7*f**2*y**6) + x**2*(-8*f**6*y**8 + 8*f**4*y**8))*sin(p)**5/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) + 6*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(8*f**6*y**10 + x**10*(f**2 + 2) + x**8*(-4*f**4*y**2 + f**2*y**2 - 12*y**2) + x**6*(-16*f**4*y**4 - 41*f**2*y**4 + 2*y**4) + x**4*(-52*f**4*y**6 + 7*f**2*y**6) + x**2*(-8*f**6*y**8 + 8*f**4*y**8))*sin(p)**3*cos(p)**2/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) + 3*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(8*f**6*y**10 + x**10*(f**2 + 2) + x**8*(-4*f**4*y**2 + f**2*y**2 - 12*y**2) + x**6*(-16*f**4*y**4 - 41*f**2*y**4 + 2*y**4) + x**4*(-52*f**4*y**6 + 7*f**2*y**6) + x**2*(-8*f**6*y**8 + 8*f**4*y**8))*sin(p)*cos(p)**4/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) + 6*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-2*x**14 + x**12*(-f**2*y**2 + 12*y**2) + x**10*(4*f**4*y**4 + 71*f**2*y**4 - 2*y**4) + x**8*(3*f**6*y**6 + 134*f**4*y**6 - 7*f**2*y**6) + x**6*(111*f**6*y**8 - 32*f**4*y**8 + f**2*y**8) + x**4*(44*f**8*y**10 - 59*f**6*y**10 - 2*f**4*y**10) + x**2*(8*f**10*y**12 - 40*f**8*y**12 - 7*f**6*y**12) + y**14*(-8*f**10 - 4*f**8))*sin(p)**5/(sqrt(f**2*y**2 + x**2)*(f**10*y**18 + x**18 + x**16*(5*f**2*y**2 + 4*y**2) + x**14*(10*f**4*y**4 + 20*f**2*y**4 + 6*y**4) + x**12*(10*f**6*y**6 + 40*f**4*y**6 + 30*f**2*y**6 + 4*y**6) + x**10*(5*f**8*y**8 + 40*f**6*y**8 + 60*f**4*y**8 + 20*f**2*y**8 + y**8) + x**8*(f**10*y**10 + 20*f**8*y**10 + 60*f**6*y**10 + 40*f**4*y**10 + 5*f**2*y**10) + x**6*(4*f**10*y**12 + 30*f**8*y**12 + 40*f**6*y**12 + 10*f**4*y**12) + x**4*(6*f**10*y**14 + 20*f**8*y**14 + 10*f**6*y**14) + x**2*(4*f**10*y**16 + 5*f**8*y**16))) + 12*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-2*x**14 + x**12*(-f**2*y**2 + 12*y**2) + x**10*(4*f**4*y**4 + 71*f**2*y**4 - 2*y**4) + x**8*(3*f**6*y**6 + 134*f**4*y**6 - 7*f**2*y**6) + x**6*(111*f**6*y**8 - 32*f**4*y**8 + f**2*y**8) + x**4*(44*f**8*y**10 - 59*f**6*y**10 - 2*f**4*y**10) + x**2*(8*f**10*y**12 - 40*f**8*y**12 - 7*f**6*y**12) + y**14*(-8*f**10 - 4*f**8))*sin(p)**3*cos(p)**2/(sqrt(f**2*y**2 + x**2)*(f**10*y**18 + x**18 + x**16*(5*f**2*y**2 + 4*y**2) + x**14*(10*f**4*y**4 + 20*f**2*y**4 + 6*y**4) + x**12*(10*f**6*y**6 + 40*f**4*y**6 + 30*f**2*y**6 + 4*y**6) + x**10*(5*f**8*y**8 + 40*f**6*y**8 + 60*f**4*y**8 + 20*f**2*y**8 + y**8) + x**8*(f**10*y**10 + 20*f**8*y**10 + 60*f**6*y**10 + 40*f**4*y**10 + 5*f**2*y**10) + x**6*(4*f**10*y**12 + 30*f**8*y**12 + 40*f**6*y**12 + 10*f**4*y**12) + x**4*(6*f**10*y**14 + 20*f**8*y**14 + 10*f**6*y**14) + x**2*(4*f**10*y**16 + 5*f**8*y**16))) + 6*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-2*x**14 + x**12*(-f**2*y**2 + 12*y**2) + x**10*(4*f**4*y**4 + 71*f**2*y**4 - 2*y**4) + x**8*(3*f**6*y**6 + 134*f**4*y**6 - 7*f**2*y**6) + x**6*(111*f**6*y**8 - 32*f**4*y**8 + f**2*y**8) + x**4*(44*f**8*y**10 - 59*f**6*y**10 - 2*f**4*y**10) + x**2*(8*f**10*y**12 - 40*f**8*y**12 - 7*f**6*y**12) + y**14*(-8*f**10 - 4*f**8))*sin(p)*cos(p)**4/(sqrt(f**2*y**2 + x**2)*(f**10*y**18 + x**18 + x**16*(5*f**2*y**2 + 4*y**2) + x**14*(10*f**4*y**4 + 20*f**2*y**4 + 6*y**4) + x**12*(10*f**6*y**6 + 40*f**4*y**6 + 30*f**2*y**6 + 4*y**6) + x**10*(5*f**8*y**8 + 40*f**6*y**8 + 60*f**4*y**8 + 20*f**2*y**8 + y**8) + x**8*(f**10*y**10 + 20*f**8*y**10 + 60*f**6*y**10 + 40*f**4*y**10 + 5*f**2*y**10) + x**6*(4*f**10*y**12 + 30*f**8*y**12 + 40*f**6*y**12 + 10*f**4*y**12) + x**4*(6*f**10*y**14 + 20*f**8*y**14 + 10*f**6*y**14) + x**2*(4*f**10*y**16 + 5*f**8*y**16)))) - 0.625*y*(6*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-2*f**6*y**10 + x**10*(-4*f**2 - 8) + x**8*(f**4*y**2 - 24*f**2*y**2 + 8*y**2) + x**6*(-3*f**4*y**4 + 28*f**2*y**4) + x**4*(-2*f**6*y**6 + 47*f**4*y**6) + x**2*(12*f**6*y**8 + 3*f**4*y**8))*sin(p)**4*cos(p)/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) + 12*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-2*f**6*y**10 + x**10*(-4*f**2 - 8) + x**8*(f**4*y**2 - 24*f**2*y**2 + 8*y**2) + x**6*(-3*f**4*y**4 + 28*f**2*y**4) + x**4*(-2*f**6*y**6 + 47*f**4*y**6) + x**2*(12*f**6*y**8 + 3*f**4*y**8))*sin(p)**2*cos(p)**3/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) + 6*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-2*f**6*y**10 + x**10*(-4*f**2 - 8) + x**8*(f**4*y**2 - 24*f**2*y**2 + 8*y**2) + x**6*(-3*f**4*y**4 + 28*f**2*y**4) + x**4*(-2*f**6*y**6 + 47*f**4*y**6) + x**2*(12*f**6*y**8 + 3*f**4*y**8))*cos(p)**5/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))))
4:3:-0.3125*x**2*(-3*sqrt(f)*g*y*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-20*f**6*y**8 + x**8*(3*f**4 + 4*f**2 + 8) + x**6*(-2*f**6*y**2 + 11*f**4*y**2 + 24*f**2*y**2 - 8*y**2) + x**4*(-8*f**6*y**4 + 21*f**4*y**4 - 28*f**2*y**4) + x**2*(-10*f**6*y**6 - 35*f**4*y**6))*sin(p)**5/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) + 6*sqrt(f)*g*y*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-20*f**6*y**8 + x**8*(3*f**4 + 4*f**2 + 8) + x**6*(-2*f**6*y**2 + 11*f**4*y**2 + 24*f**2*y**2 - 8*y**2) + x**4*(-8*f**6*y**4 + 21*f**4*y**4 - 28*f**2*y**4) + x**2*(-10*f**6*y**6 - 35*f**4*y**6))*sin(p)**3*cos(p)**2/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) + 9*sqrt(f)*g*y*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-20*f**6*y**8 + x**8*(3*f**4 + 4*f**2 + 8) + x**6*(-2*f**6*y**2 + 11*f**4*y**2 + 24*f**2*y**2 - 8*y**2) + x**4*(-8*f**6*y**4 + 21*f**4*y**4 - 28*f**2*y**4) + x**2*(-10*f**6*y**6 - 35*f**4*y**6))*sin(p)*cos(p)**4/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12)))) - 0.3125*x*(9*sqrt(f)*g*y**2*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-20*x**8 + x**6*(-35*f**2*y**2 - 10*y**2) + x**4*(-28*f**4*y**4 + 21*f**2*y**4 - 8*y**4) + x**2*(-8*f**6*y**6 + 24*f**4*y**6 + 11*f**2*y**6 - 2*y**6) + y**8*(8*f**6 + 4*f**4 + 3*f**2))*sin(p)**5/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) - 9*sqrt(f)*g*y**2*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-20*x**8 + x**6*(-35*f**2*y**2 - 10*y**2) + x**4*(-28*f**4*y**4 + 21*f**2*y**4 - 8*y**4) + x**2*(-8*f**6*y**6 + 24*f**4*y**6 + 11*f**2*y**6 - 2*y**6) + y**8*(8*f**6 + 4*f**4 + 3*f**2))*sin(p)**4*cos(p)/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) - 18*sqrt(f)*g*y**2*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-20*x**8 + x**6*(-35*f**2*y**2 - 10*y**2) + x**4*(-28*f**4*y**4 + 21*f**2*y**4 - 8*y**4) + x**2*(-8*f**6*y**6 + 24*f**4*y**6 + 11*f**2*y**6 - 2*y**6) + y**8*(8*f**6 + 4*f**4 + 3*f**2))*sin(p)**3*cos(p)**2/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) - 6*sqrt(f)*g*y**2*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-20*x**8 + x**6*(-35*f**2*y**2 - 10*y**2) + x**4*(-28*f**4*y**4 + 21*f**2*y**4 - 8*y**4) + x**2*(-8*f**6*y**6 + 24*f**4*y**6 + 11*f**2*y**6 - 2*y**6) + y**8*(8*f**6 + 4*f**4 + 3*f**2))*sin(p)**2*cos(p)**3/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) - 27*sqrt(f)*g*y**2*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-20*x**8 + x**6*(-35*f**2*y**2 - 10*y**2) + x**4*(-28*f**4*y**4 + 21*f**2*y**4 - 8*y**4) + x**2*(-8*f**6*y**6 + 24*f**4*y**6 + 11*f**2*y**6 - 2*y**6) + y**8*(8*f**6 + 4*f**4 + 3*f**2))*sin(p)*cos(p)**4/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) + 3*sqrt(f)*g*y**2*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-20*x**8 + x**6*(-35*f**2*y**2 - 10*y**2) + x**4*(-28*f**4*y**4 + 21*f**2*y**4 - 8*y**4) + x**2*(-8*f**6*y**6 + 24*f**4*y**6 + 11*f**2*y**6 - 2*y**6) + y**8*(8*f**6 + 4*f**4 + 3*f**2))*cos(p)**5/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) + 27*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(8*f**6*y**10 + x**10*(f**2 + 2) + x**8*(-4*f**4*y**2 + f**2*y**2 - 12*y**2) + x**6*(-16*f**4*y**4 - 41*f**2*y**4 + 2*y**4) + x**4*(-52*f**4*y**6 + 7*f**2*y**6) + x**2*(-8*f**6*y**8 + 8*f**4*y**8))*sin(p)**4*cos(p)/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) + 18*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(8*f**6*y**10 + x**10*(f**2 + 2) + x**8*(-4*f**4*y**2 + f**2*y**2 - 12*y**2) + x**6*(-16*f**4*y**4 - 41*f**2*y**4 + 2*y**4) + x**4*(-52*f**4*y**6 + 7*f**2*y**6) + x**2*(-8*f**6*y**8 + 8*f**4*y**8))*sin(p)**2*cos(p)**3/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) - 9*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(8*f**6*y**10 + x**10*(f**2 + 2) + x**8*(-4*f**4*y**2 + f**2*y**2 - 12*y**2) + x**6*(-16*f**4*y**4 - 41*f**2*y**4 + 2*y**4) + x**4*(-52*f**4*y**6 + 7*f**2*y**6) + x**2*(-8*f**6*y**8 + 8*f**4*y**8))*cos(p)**5/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) + 18*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-2*x**14 + x**12*(-f**2*y**2 + 12*y**2) + x**10*(4*f**4*y**4 + 71*f**2*y**4 - 2*y**4) + x**8*(3*f**6*y**6 + 134*f**4*y**6 - 7*f**2*y**6) + x**6*(111*f**6*y**8 - 32*f**4*y**8 + f**2*y**8) + x**4*(44*f**8*y**10 - 59*f**6*y**10 - 2*f**4*y**10) + x**2*(8*f**10*y**12 - 40*f**8*y**12 - 7*f**6*y**12) + y**14*(-8*f**10 - 4*f**8))*sin(p)**4*cos(p)/(sqrt(f**2*y**2 + x**2)*(f**10*y**18 + x**18 + x**16*(5*f**2*y**2 + 4*y**2) + x**14*(10*f**4*y**4 + 20*f**2*y**4 + 6*y**4) + x**12*(10*f**6*y**6 + 40*f**4*y**6 + 30*f**2*y**6 + 4*y**6) + x**10*(5*f**8*y**8 + 40*f**6*y**8 + 60*f**4*y**8 + 20*f**2*y**8 + y**8) + x**8*(f**10*y**10 + 20*f**8*y**10 + 60*f**6*y**10 + 40*f**4*y**10 + 5*f**2*y**10) + x**6*(4*f**10*y**12 + 30*f**8*y**12 + 40*f**6*y**12 + 10*f**4*y**12) + x**4*(6*f**10*y**14 + 20*f**8*y**14 + 10*f**6*y**14) + x**2*(4*f**10*y**16 + 5*f**8*y**16))) + 12*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-2*x**14 + x**12*(-f**2*y**2 + 12*y**2) + x**10*(4*f**4*y**4 + 71*f**2*y**4 - 2*y**4) + x**8*(3*f**6*y**6 + 134*f**4*y**6 - 7*f**2*y**6) + x**6*(111*f**6*y**8 - 32*f**4*y**8 + f**2*y**8) + x**4*(44*f**8*y**10 - 59*f**6*y**10 - 2*f**4*y**10) + x**2*(8*f**10*y**12 - 40*f**8*y**12 - 7*f**6*y**12) + y**14*(-8*f**10 - 4*f**8))*sin(p)**2*cos(p)**3/(sqrt(f**2*y**2 + x**2)*(f**10*y**18 + x**18 + x**16*(5*f**2*y**2 + 4*y**2) + x**14*(10*f**4*y**4 + 20*f**2*y**4 + 6*y**4) + x**12*(10*f**6*y**6 + 40*f**4*y**6 + 30*f**2*y**6 + 4*y**6) + x**10*(5*f**8*y**8 + 40*f**6*y**8 + 60*f**4*y**8 + 20*f**2*y**8 + y**8) + x**8*(f**10*y**10 + 20*f**8*y**10 + 60*f**6*y**10 + 40*f**4*y**10 + 5*f**2*y**10) + x**6*(4*f**10*y**12 + 30*f**8*y**12 + 40*f**6*y**12 + 10*f**4*y**12) + x**4*(6*f**10*y**14 + 20*f**8*y**14 + 10*f**6*y**14) + x**2*(4*f**10*y**16 + 5*f**8*y**16))) - 6*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-2*x**14 + x**12*(-f**2*y**2 + 12*y**2) + x**10*(4*f**4*y**4 + 71*f**2*y**4 - 2*y**4) + x**8*(3*f**6*y**6 + 134*f**4*y**6 - 7*f**2*y**6) + x**6*(111*f**6*y**8 - 32*f**4*y**8 + f**2*y**8) + x**4*(44*f**8*y**10 - 59*f**6*y**10 - 2*f**4*y**10) + x**2*(8*f**10*y**12 - 40*f**8*y**12 - 7*f**6*y**12) + y**14*(-8*f**10 - 4*f**8))*cos(p)**5/(sqrt(f**2*y**2 + x**2)*(f**10*y**18 + x**18 + x**16*(5*f**2*y**2 + 4*y**2) + x**14*(10*f**4*y**4 + 20*f**2*y**4 + 6*y**4) + x**12*(10*f**6*y**6 + 40*f**4*y**6 + 30*f**2*y**6 + 4*y**6) + x**10*(5*f**8*y**8 + 40*f**6*y**8 + 60*f**4*y**8 + 20*f**2*y**8 + y**8) + x**8*(f**10*y**10 + 20*f**8*y**10 + 60*f**6*y**10 + 40*f**4*y**10 + 5*f**2*y**10) + x**6*(4*f**10*y**12 + 30*f**8*y**12 + 40*f**6*y**12 + 10*f**4*y**12) + x**4*(6*f**10*y**14 + 20*f**8*y**14 + 10*f**6*y**14) + x**2*(4*f**10*y**16 + 5*f**8*y**16)))) - 0.3125*y*(6*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-2*f**6*y**10 + x**10*(-4*f**2 - 8) + x**8*(f**4*y**2 - 24*f**2*y**2 + 8*y**2) + x**6*(-3*f**4*y**4 + 28*f**2*y**4) + x**4*(-2*f**6*y**6 + 47*f**4*y**6) + x**2*(12*f**6*y**8 + 3*f**4*y**8))*sin(p)**5/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) - 12*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-2*f**6*y**10 + x**10*(-4*f**2 - 8) + x**8*(f**4*y**2 - 24*f**2*y**2 + 8*y**2) + x**6*(-3*f**4*y**4 + 28*f**2*y**4) + x**4*(-2*f**6*y**6 + 47*f**4*y**6) + x**2*(12*f**6*y**8 + 3*f**4*y**8))*sin(p)**3*cos(p)**2/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) - 18*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-2*f**6*y**10 + x**10*(-4*f**2 - 8) + x**8*(f**4*y**2 - 24*f**2*y**2 + 8*y**2) + x**6*(-3*f**4*y**4 + 28*f**2*y**4) + x**4*(-2*f**6*y**6 + 47*f**4*y**6) + x**2*(12*f**6*y**8 + 3*f**4*y**8))*sin(p)*cos(p)**4/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12)))):-0.3125*x**2*(9*sqrt(f)*g*y*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-20*f**6*y**8 + x**8*(3*f**4 + 4*f**2 + 8) + x**6*(-2*f**6*y**2 + 11*f**4*y**2 + 24*f**2*y**2 - 8*y**2) + x**4*(-8*f**6*y**4 + 21*f**4*y**4 - 28*f**2*y**4) + x**2*(-10*f**6*y**6 - 35*f**4*y**6))*sin(p)**4*cos(p)/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) + 6*sqrt(f)*g*y*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-20*f**6*y**8 + x**8*(3*f**4 + 4*f**2 + 8) + x**6*(-2*f**6*y**2 + 11*f**4*y**2 + 24*f**2*y**2 - 8*y**2) + x**4*(-8*f**6*y**4 + 21*f**4*y**4 - 28*f**2*y**4) + x**2*(-10*f**6*y**6 - 35*f**4*y**6))*sin(p)**2*cos(p)**3/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) - 3*sqrt(f)*g*y*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-20*f**6*y**8 + x**8*(3*f**4 + 4*f**2 + 8) + x**6*(-2*f**6*y**2 + 11*f**4*y**2 + 24*f**2*y**2 - 8*y**2) + x**4*(-8*f**6*y**4 + 21*f**4*y**4 - 28*f**2*y**4) + x**2*(-10*f**6*y**6 - 35*f**4*y**6))*cos(p)**5/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12)))) - 0.3125*x*(-3*sqrt(f)*g*y**2*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-20*x**8 + x**6*(-35*f**2*y**2 - 10*y**2) + x**4*(-28*f**4*y**4 + 21*f**2*y**4 - 8*y**4) + x**2*(-8*f**6*y**6 + 24*f**4*y**6 + 11*f**2*y**6 - 2*y**6) + y**8*(8*f**6 + 4*f**4 + 3*f**2))*sin(p)**5/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) - 27*sqrt(f)*g*y**2*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-20*x**8 + x**6*(-35*f**2*y**2 - 10*y**2) + x**4*(-28*f**4*y**4 + 21*f**2*y**4 - 8*y**4) + x**2*(-8*f**6*y**6 + 24*f**4*y**6 + 11*f**2*y**6 - 2*y**6) + y**8*(8*f**6 + 4*f**4 + 3*f**2))*sin(p)**4*cos(p)/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) + 6*sqrt(f)*g*y**2*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-20*x**8 + x**6*(-35*f**2*y**2 - 10*y**2) + x**4*(-28*f**4*y**4 + 21*f**2*y**4 - 8*y**4) + x**2*(-8*f**6*y**6 + 24*f**4*y**6 + 11*f**2*y**6 - 2*y**6) + y**8*(8*f**6 + 4*f**4 + 3*f**2))*sin(p)**3*cos(p)**2/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) - 18*sqrt(f)*g*y**2*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-20*x**8 + x**6*(-35*f**2*y**2 - 10*y**2) + x**4*(-28*f**4*y**4 + 21*f**2*y**4 - 8*y**4) + x**2*(-8*f**6*y**6 + 24*f**4*y**6 + 11*f**2*y**6 - 2*y**6) + y**8*(8*f**6 + 4*f**4 + 3*f**2))*sin(p)**2*cos(p)**3/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) + 9*sqrt(f)*g*y**2*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-20*x**8 + x**6*(-35*f**2*y**2 - 10*y**2) + x**4*(-28*f**4*y**4 + 21*f**2*y**4 - 8*y**4) + x**2*(-8*f**6*y**6 + 24*f**4*y**6 + 11*f**2*y**6 - 2*y**6) + y**8*(8*f**6 + 4*f**4 + 3*f**2))*sin(p)*cos(p)**4/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) + 9*sqrt(f)*g*y**2*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-20*x**8 + x**6*(-35*f**2*y**2 - 10*y**2) + x**4*(-28*f**4*y**4 + 21*f**2*y**4 - 8*y**4) + x**2*(-8*f**6*y**6 + 24*f**4*y**6 + 11*f**2*y**6 - 2*y**6) + y**8*(8*f**6 + 4*f**4 + 3*f**2))*cos(p)**5/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) + 9*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(8*f**6*y**10 + x**10*(f**2 + 2) + x**8*(-4*f**4*y**2 + f**2*y**2 - 12*y**2) + x**6*(-16*f**4*y**4 - 41*f**2*y**4 + 2*y**4) + x**4*(-52*f**4*y**6 + 7*f**2*y**6) + x**2*(-8*f**6*y**8 + 8*f**4*y**8))*sin(p)**5/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) - 18*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(8*f**6*y**10 + x**10*(f**2 + 2) + x**8*(-4*f**4*y**2 + f**2*y**2 - 12*y**2) + x**6*(-16*f**4*y**4 - 41*f**2*y**4 + 2*y**4) + x**4*(-52*f**4*y**6 + 7*f**2*y**6) + x**2*(-8*f**6*y**8 + 8*f**4*y**8))*sin(p)**3*cos(p)**2/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) - 27*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(8*f**6*y**10 + x**10*(f**2 + 2) + x**8*(-4*f**4*y**2 + f**2*y**2 - 12*y**2) + x**6*(-16*f**4*y**4 - 41*f**2*y**4 + 2*y**4) + x**4*(-52*f**4*y**6 + 7*f**2*y**6) + x**2*(-8*f**6*y**8 + 8*f**4*y**8))*sin(p)*cos(p)**4/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) + 6*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-2*x**14 + x**12*(-f**2*y**2 + 12*y**2) + x**10*(4*f**4*y**4 + 71*f**2*y**4 - 2*y**4) + x**8*(3*f**6*y**6 + 134*f**4*y**6 - 7*f**2*y**6) + x**6*(111*f**6*y**8 - 32*f**4*y**8 + f**2*y**8) + x**4*(44*f**8*y**10 - 59*f**6*y**10 - 2*f**4*y**10) + x**2*(8*f**10*y**12 - 40*f**8*y**12 - 7*f**6*y**12) + y**14*(-8*f**10 - 4*f**8))*sin(p)**5/(sqrt(f**2*y**2 + x**2)*(f**10*y**18 + x**18 + x**16*(5*f**2*y**2 + 4*y**2) + x**14*(10*f**4*y**4 + 20*f**2*y**4 + 6*y**4) + x**12*(10*f**6*y**6 + 40*f**4*y**6 + 30*f**2*y**6 + 4*y**6) + x**10*(5*f**8*y**8 + 40*f**6*y**8 + 60*f**4*y**8 + 20*f**2*y**8 + y**8) + x**8*(f**10*y**10 + 20*f**8*y**10 + 60*f**6*y**10 + 40*f**4*y**10 + 5*f**2*y**10) + x**6*(4*f**10*y**12 + 30*f**8*y**12 + 40*f**6*y**12 + 10*f**4*y**12) + x**4*(6*f**10*y**14 + 20*f**8*y**14 + 10*f**6*y**14) + x**2*(4*f**10*y**16 + 5*f**8*y**16))) - 12*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-2*x**14 + x**12*(-f**2*y**2 + 12*y**2) + x**10*(4*f**4*y**4 + 71*f**2*y**4 - 2*y**4) + x**8*(3*f**6*y**6 + 134*f**4*y**6 - 7*f**2*y**6) + x**6*(111*f**6*y**8 - 32*f**4*y**8 + f**2*y**8) + x**4*(44*f**8*y**10 - 59*f**6*y**10 - 2*f**4*y**10) + x**2*(8*f**10*y**12 - 40*f**8*y**12 - 7*f**6*y**12) + y**14*(-8*f**10 - 4*f**8))*sin(p)**3*cos(p)**2/(sqrt(f**2*y**2 + x**2)*(f**10*y**18 + x**18 + x**16*(5*f**2*y**2 + 4*y**2) + x**14*(10*f**4*y**4 + 20*f**2*y**4 + 6*y**4) + x**12*(10*f**6*y**6 + 40*f**4*y**6 + 30*f**2*y**6 + 4*y**6) + x**10*(5*f**8*y**8 + 40*f**6*y**8 + 60*f**4*y**8 + 20*f**2*y**8 + y**8) + x**8*(f**10*y**10 + 20*f**8*y**10 + 60*f**6*y**10 + 40*f**4*y**10 + 5*f**2*y**10) + x**6*(4*f**10*y**12 + 30*f**8*y**12 + 40*f**6*y**12 + 10*f**4*y**12) + x**4*(6*f**10*y**14 + 20*f**8*y**14 + 10*f**6*y**14) + x**2*(4*f**10*y**16 + 5*f**8*y**16))) - 18*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-2*x**14 + x**12*(-f**2*y**2 + 12*y**2) + x**10*(4*f**4*y**4 + 71*f**2*y**4 - 2*y**4) + x**8*(3*f**6*y**6 + 134*f**4*y**6 - 7*f**2*y**6) + x**6*(111*f**6*y**8 - 32*f**4*y**8 + f**2*y**8) + x**4*(44*f**8*y**10 - 59*f**6*y**10 - 2*f**4*y**10) + x**2*(8*f**10*y**12 - 40*f**8*y**12 - 7*f**6*y**12) + y**14*(-8*f**10 - 4*f**8))*sin(p)*cos(p)**4/(sqrt(f**2*y**2 + x**2)*(f**10*y**18 + x**18 + x**16*(5*f**2*y**2 + 4*y**2) + x**14*(10*f**4*y**4 + 20*f**2*y**4 + 6*y**4) + x**12*(10*f**6*y**6 + 40*f**4*y**6 + 30*f**2*y**6 + 4*y**6) + x**10*(5*f**8*y**8 + 40*f**6*y**8 + 60*f**4*y**8 + 20*f**2*y**8 + y**8) + x**8*(f**10*y**10 + 20*f**8*y**10 + 60*f**6*y**10 + 40*f**4*y**10 + 5*f**2*y**10) + x**6*(4*f**10*y**12 + 30*f**8*y**12 + 40*f**6*y**12 + 10*f**4*y**12) + x**4*(6*f**10*y**14 + 20*f**8*y**14 + 10*f**6*y**14) + x**2*(4*f**10*y**16 + 5*f**8*y**16)))) - 0.3125*y*(-18*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-2*f**6*y**10 + x**10*(-4*f**2 - 8) + x**8*(f**4*y**2 - 24*f**2*y**2 + 8*y**2) + x**6*(-3*f**4*y**4 + 28*f**2*y**4) + x**4*(-2*f**6*y**6 + 47*f**4*y**6) + x**2*(12*f**6*y**8 + 3*f**4*y**8))*sin(p)**4*cos(p)/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) - 12*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-2*f**6*y**10 + x**10*(-4*f**2 - 8) + x**8*(f**4*y**2 - 24*f**2*y**2 + 8*y**2) + x**6*(-3*f**4*y**4 + 28*f**2*y**4) + x**4*(-2*f**6*y**6 + 47*f**4*y**6) + x**2*(12*f**6*y**8 + 3*f**4*y**8))*sin(p)**2*cos(p)**3/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) + 6*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-2*f**6*y**10 + x**10*(-4*f**2 - 8) + x**8*(f**4*y**2 - 24*f**2*y**2 + 8*y**2) + x**6*(-3*f**4*y**4 + 28*f**2*y**4) + x**4*(-2*f**6*y**6 + 47*f**4*y**6) + x**2*(12*f**6*y**8 + 3*f**4*y**8))*cos(p)**5/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))))
4:5:-0.0625*x**2*(-3*sqrt(f)*g*y*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-20*f**6*y**8 + x**8*(3*f**4 + 4*f**2 + 8) + x**6*(-2*f**6*y**2 + 11*f**4*y**2 + 24*f**2*y**2 - 8*y**2) + x**4*(-8*f**6*y**4 + 21*f**4*y**4 - 28*f**2*y**4) + x**2*(-10*f**6*y**6 - 35*f**4*y**6))*sin(p)**5/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) + 30*sqrt(f)*g*y*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-20*f**6*y**8 + x**8*(3*f**4 + 4*f**2 + 8) + x**6*(-2*f**6*y**2 + 11*f**4*y**2 + 24*f**2*y**2 - 8*y**2) + x**4*(-8*f**6*y**4 + 21*f**4*y**4 - 28*f**2*y**4) + x**2*(-10*f**6*y**6 - 35*f**4*y**6))*sin(p)**3*cos(p)**2/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) - 15*sqrt(f)*g*y*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-20*f**6*y**8 + x**8*(3*f**4 + 4*f**2 + 8) + x**6*(-2*f**6*y**2 + 11*f**4*y**2 + 24*f**2*y**2 - 8*y**2) + x**4*(-8*f**6*y**4 + 21*f**4*y**4 - 28*f**2*y**4) + x**2*(-10*f**6*y**6 - 35*f**4*y**6))*sin(p)*cos(p)**4/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12)))) - 0.0625*x*(-15*sqrt(f)*g*y**2*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-20*x**8 + x**6*(-35*f**2*y**2 - 10*y**2) + x**4*(-28*f**4*y**4 + 21*f**2*y**4 - 8*y**4) + x**2*(-8*f**6*y**6 + 24*f**4*y**6 + 11*f**2*y**6 - 2*y**6) + y**8*(8*f**6 + 4*f**4 + 3*f**2))*sin(p)**5/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) + 15*sqrt(f)*g*y**2*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-20*x**8 + x**6*(-35*f**2*y**2 - 10*y**2) + x**4*(-28*f**4*y**4 + 21*f**2*y**4 - 8*y**4) + x**2*(-8*f**6*y**6 + 24*f**4*y**6 + 11*f**2*y**6 - 2*y**6) + y**8*(8*f**6 + 4*f**4 + 3*f**2))*sin(p)**4*cos(p)/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) + 150*sqrt(f)*g*y**2*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-20*x**8 + x**6*(-35*f**2*y**2 - 10*y**2) + x**4*(-28*f**4*y**4 + 21*f**2*y**4 - 8*y**4) + x**2*(-8*f**6*y**6 + 24*f**4*y**6 + 11*f**2*y**6 - 2*y**6) + y**8*(8*f**6 + 4*f**4 + 3*f**2))*sin(p)**3*cos(p)**2/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) - 30*sqrt(f)*g*y**2*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-20*x**8 + x**6*(-35*f**2*y**2 - 10*y**2) + x**4*(-28*f**4*y**4 + 21*f**2*y**4 - 8*y**4) + x**2*(-8*f**6*y**6 + 24*f**4*y**6 + 11*f**2*y**6 - 2*y**6) + y**8*(8*f**6 + 4*f**4 + 3*f**2))*sin(p)**2*cos(p)**3/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) - 75*sqrt(f)*g*y**2*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-20*x**8 + x**6*(-35*f**2*y**2 - 10*y**2) + x**4*(-28*f**4*y**4 + 21*f**2*y**4 - 8*y**4) + x**2*(-8*f**6*y**6 + 24*f**4*y**6 + 11*f**2*y**6 - 2*y**6) + y**8*(8*f**6 + 4*f**4 + 3*f**2))*sin(p)*cos(p)**4/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) + 3*sqrt(f)*g*y**2*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-20*x**8 + x**6*(-35*f**2*y**2 - 10*y**2) + x**4*(-28*f**4*y**4 + 21*f**2*y**4 - 8*y**4) + x**2*(-8*f**6*y**6 + 24*f**4*y**6 + 11*f**2*y**6 - 2*y**6) + y**8*(8*f**6 + 4*f**4 + 3*f**2))*cos(p)**5/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) + 75*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(8*f**6*y**10 + x**10*(f**2 + 2) + x**8*(-4*f**4*y**2 + f**2*y**2 - 12*y**2) + x**6*(-16*f**4*y**4 - 41*f**2*y**4 + 2*y**4) + x**4*(-52*f**4*y**6 + 7*f**2*y**6) + x**2*(-8*f**6*y**8 + 8*f**4*y**8))*sin(p)**4*cos(p)/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) - 150*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(8*f**6*y**10 + x**10*(f**2 + 2) + x**8*(-4*f**4*y**2 + f**2*y**2 - 12*y**2) + x**6*(-16*f**4*y**4 - 41*f**2*y**4 + 2*y**4) + x**4*(-52*f**4*y**6 + 7*f**2*y**6) + x**2*(-8*f**6*y**8 + 8*f**4*y**8))*sin(p)**2*cos(p)**3/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) + 15*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(8*f**6*y**10 + x**10*(f**2 + 2) + x**8*(-4*f**4*y**2 + f**2*y**2 - 12*y**2) + x**6*(-16*f**4*y**4 - 41*f**2*y**4 + 2*y**4) + x**4*(-52*f**4*y**6 + 7*f**2*y**6) + x**2*(-8*f**6*y**8 + 8*f**4*y**8))*cos(p)**5/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) - 150*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-2*x**14 + x**12*(-f**2*y**2 + 12*y**2) + x**10*(4*f**4*y**4 + 71*f**2*y**4 - 2*y**4) + x**8*(3*f**6*y**6 + 134*f**4*y**6 - 7*f**2*y**6) + x**6*(111*f**6*y**8 - 32*f**4*y**8 + f**2*y**8) + x**4*(44*f**8*y**10 - 59*f**6*y**10 - 2*f**4*y**10) + x**2*(8*f**10*y**12 - 40*f**8*y**12 - 7*f**6*y**12) + y**14*(-8*f**10 - 4*f**8))*sin(p)**4*cos(p)/(sqrt(f**2*y**2 + x**2)*(f**10*y**18 + x**18 + x**16*(5*f**2*y**2 + 4*y**2) + x**14*(10*f**4*y**4 + 20*f**2*y**4 + 6*y**4) + x**12*(10*f**6*y**6 + 40*f**4*y**6 + 30*f**2*y**6 + 4*y**6) + x**10*(5*f**8*y**8 + 40*f**6*y**8 + 60*f**4*y**8 + 20*f**2*y**8 + y**8) + x**8*(f**10*y**10 + 20*f**8*y**10 + 60*f**6*y**10 + 40*f**4*y**10 + 5*f**2*y**10) + x**6*(4*f**10*y**12 + 30*f**8*y**12 + 40*f**6*y**12 + 10*f**4*y**12) + x**4*(6*f**10*y**14 + 20*f**8*y**14 + 10*f**6*y**14) + x**2*(4*f**10*y**16 + 5*f**8*y**16))) + 300*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-2*x**14 + x**12*(-f**2*y**2 + 12*y**2) + x**10*(4*f**4*y**4 + 71*f**2*y**4 - 2*y**4) + x**8*(3*f**6*y**6 + 134*f**4*y**6 - 7*f**2*y**6) + x**6*(111*f**6*y**8 - 32*f**4*y**8 + f**2*y**8) + x**4*(44*f**8*y**10 - 59*f**6*y**10 - 2*f**4*y**10) + x**2*(8*f**10*y**12 - 40*f**8*y**12 - 7*f**6*y**12) + y**14*(-8*f**10 - 4*f**8))*sin(p)**2*cos(p)**3/(sqrt(f**2*y**2 + x**2)*(f**10*y**18 + x**18 + x**16*(5*f**2*y**2 + 4*y**2) + x**14*(10*f**4*y**4 + 20*f**2*y**4 + 6*y**4) + x**12*(10*f**6*y**6 + 40*f**4*y**6 + 30*f**2*y**6 + 4*y**6) + x**10*(5*f**8*y**8 + 40*f**6*y**8 + 60*f**4*y**8 + 20*f**2*y**8 + y**8) + x**8*(f**10*y**10 + 20*f**8*y**10 + 60*f**6*y**10 + 40*f**4*y**10 + 5*f**2*y**10) + x**6*(4*f**10*y**12 + 30*f**8*y**12 + 40*f**6*y**12 + 10*f**4*y**12) + x**4*(6*f**10*y**14 + 20*f**8*y**14 + 10*f**6*y**14) + x**2*(4*f**10*y**16 + 5*f**8*y**16))) - 30*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-2*x**14 + x**12*(-f**2*y**2 + 12*y**2) + x**10*(4*f**4*y**4 + 71*f**2*y**4 - 2*y**4) + x**8*(3*f**6*y**6 + 134*f**4*y**6 - 7*f**2*y**6) + x**6*(111*f**6*y**8 - 32*f**4*y**8 + f**2*y**8) + x**4*(44*f**8*y**10 - 59*f**6*y**10 - 2*f**4*y**10) + x**2*(8*f**10*y**12 - 40*f**8*y**12 - 7*f**6*y**12) + y**14*(-8*f**10 - 4*f**8))*cos(p)**5/(sqrt(f**2*y**2 + x**2)*(f**10*y**18 + x**18 + x**16*(5*f**2*y**2 + 4*y**2) + x**14*(10*f**4*y**4 + 20*f**2*y**4 + 6*y**4) + x**12*(10*f**6*y**6 + 40*f**4*y**6 + 30*f**2*y**6 + 4*y**6) + x**10*(5*f**8*y**8 + 40*f**6*y**8 + 60*f**4*y**8 + 20*f**2*y**8 + y**8) + x**8*(f**10*y**10 + 20*f**8*y**10 + 60*f**6*y**10 + 40*f**4*y**10 + 5*f**2*y**10) + x**6*(4*f**10*y**12 + 30*f**8*y**12 + 40*f**6*y**12 + 10*f**4*y**12) + x**4*(6*f**10*y**14 + 20*f**8*y**14 + 10*f**6*y**14) + x**2*(4*f**10*y**16 + 5*f**8*y**16)))) - 0.0625*y*(30*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-2*f**6*y**10 + x**10*(-4*f**2 - 8) + x**8*(f**4*y**2 - 24*f**2*y**2 + 8*y**2) + x**6*(-3*f**4*y**4 + 28*f**2*y**4) + x**4*(-2*f**6*y**6 + 47*f**4*y**6) + x**2*(12*f**6*y**8 + 3*f**4*y**8))*sin(p)**5/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) - 300*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-2*f**6*y**10 + x**10*(-4*f**2 - 8) + x**8*(f**4*y**2 - 24*f**2*y**2 + 8*y**2) + x**6*(-3*f**4*y**4 + 28*f**2*y**4) + x**4*(-2*f**6*y**6 + 47*f**4*y**6) + x**2*(12*f**6*y**8 + 3*f**4*y**8))*sin(p)**3*cos(p)**2/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) + 150*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-2*f**6*y**10 + x**10*(-4*f**2 - 8) + x**8*(f**4*y**2 - 24*f**2*y**2 + 8*y**2) + x**6*(-3*f**4*y**4 + 28*f**2*y**4) + x**4*(-2*f**6*y**6 + 47*f**4*y**6) + x**2*(12*f**6*y**8 + 3*f**4*y**8))*sin(p)*cos(p)**4/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12)))):-0.0625*x**2*(15*sqrt(f)*g*y*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-20*f**6*y**8 + x**8*(3*f**4 + 4*f**2 + 8) + x**6*(-2*f**6*y**2 + 11*f**4*y**2 + 24*f**2*y**2 - 8*y**2) + x**4*(-8*f**6*y**4 + 21*f**4*y**4 - 28*f**2*y**4) + x**2*(-10*f**6*y**6 - 35*f**4*y**6))*sin(p)**4*cos(p)/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) - 30*sqrt(f)*g*y*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-20*f**6*y**8 + x**8*(3*f**4 + 4*f**2 + 8) + x**6*(-2*f**6*y**2 + 11*f**4*y**2 + 24*f**2*y**2 - 8*y**2) + x**4*(-8*f**6*y**4 + 21*f**4*y**4 - 28*f**2*y**4) + x**2*(-10*f**6*y**6 - 35*f**4*y**6))*sin(p)**2*cos(p)**3/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) + 3*sqrt(f)*g*y*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-20*f**6*y**8 + x**8*(3*f**4 + 4*f**2 + 8) + x**6*(-2*f**6*y**2 + 11*f**4*y**2 + 24*f**2*y**2 - 8*y**2) + x**4*(-8*f**6*y**4 + 21*f**4*y**4 - 28*f**2*y**4) + x**2*(-10*f**6*y**6 - 35*f**4*y**6))*cos(p)**5/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12)))) - 0.0625*x*(3*sqrt(f)*g*y**2*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-20*x**8 + x**6*(-35*f**2*y**2 - 10*y**2) + x**4*(-28*f**4*y**4 + 21*f**2*y**4 - 8*y**4) + x**2*(-8*f**6*y**6 + 24*f**4*y**6 + 11*f**2*y**6 - 2*y**6) + y**8*(8*f**6 + 4*f**4 + 3*f**2))*sin(p)**5/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) + 75*sqrt(f)*g*y**2*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-20*x**8 + x**6*(-35*f**2*y**2 - 10*y**2) + x**4*(-28*f**4*y**4 + 21*f**2*y**4 - 8*y**4) + x**2*(-8*f**6*y**6 + 24*f**4*y**6 + 11*f**2*y**6 - 2*y**6) + y**8*(8*f**6 + 4*f**4 + 3*f**2))*sin(p)**4*cos(p)/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) - 30*sqrt(f)*g*y**2*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-20*x**8 + x**6*(-35*f**2*y**2 - 10*y**2) + x**4*(-28*f**4*y**4 + 21*f**2*y**4 - 8*y**4) + x**2*(-8*f**6*y**6 + 24*f**4*y**6 + 11*f**2*y**6 - 2*y**6) + y**8*(8*f**6 + 4*f**4 + 3*f**2))*sin(p)**3*cos(p)**2/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) - 150*sqrt(f)*g*y**2*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-20*x**8 + x**6*(-35*f**2*y**2 - 10*y**2) + x**4*(-28*f**4*y**4 + 21*f**2*y**4 - 8*y**4) + x**2*(-8*f**6*y**6 + 24*f**4*y**6 + 11*f**2*y**6 - 2*y**6) + y**8*(8*f**6 + 4*f**4 + 3*f**2))*sin(p)**2*cos(p)**3/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) + 15*sqrt(f)*g*y**2*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-20*x**8 + x**6*(-35*f**2*y**2 - 10*y**2) + x**4*(-28*f**4*y**4 + 21*f**2*y**4 - 8*y**4) + x**2*(-8*f**6*y**6 + 24*f**4*y**6 + 11*f**2*y**6 - 2*y**6) + y**8*(8*f**6 + 4*f**4 + 3*f**2))*sin(p)*cos(p)**4/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) + 15*sqrt(f)*g*y**2*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-20*x**8 + x**6*(-35*f**2*y**2 - 10*y**2) + x**4*(-28*f**4*y**4 + 21*f**2*y**4 - 8*y**4) + x**2*(-8*f**6*y**6 + 24*f**4*y**6 + 11*f**2*y**6 - 2*y**6) + y**8*(8*f**6 + 4*f**4 + 3*f**2))*cos(p)**5/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) + 15*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(8*f**6*y**10 + x**10*(f**2 + 2) + x**8*(-4*f**4*y**2 + f**2*y**2 - 12*y**2) + x**6*(-16*f**4*y**4 - 41*f**2*y**4 + 2*y**4) + x**4*(-52*f**4*y**6 + 7*f**2*y**6) + x**2*(-8*f**6*y**8 + 8*f**4*y**8))*sin(p)**5/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) - 150*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(8*f**6*y**10 + x**10*(f**2 + 2) + x**8*(-4*f**4*y**2 + f**2*y**2 - 12*y**2) + x**6*(-16*f**4*y**4 - 41*f**2*y**4 + 2*y**4) + x**4*(-52*f**4*y**6 + 7*f**2*y**6) + x**2*(-8*f**6*y**8 + 8*f**4*y**8))*sin(p)**3*cos(p)**2/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) + 75*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(8*f**6*y**10 + x**10*(f**2 + 2) + x**8*(-4*f**4*y**2 + f**2*y**2 - 12*y**2) + x**6*(-16*f**4*y**4 - 41*f**2*y**4 + 2*y**4) + x**4*(-52*f**4*y**6 + 7*f**2*y**6) + x**2*(-8*f**6*y**8 + 8*f**4*y**8))*sin(p)*cos(p)**4/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) - 30*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-2*x**14 + x**12*(-f**2*y**2 + 12*y**2) + x**10*(4*f**4*y**4 + 71*f**2*y**4 - 2*y**4) + x**8*(3*f**6*y**6 + 134*f**4*y**6 - 7*f**2*y**6) + x**6*(111*f**6*y**8 - 32*f**4*y**8 + f**2*y**8) + x**4*(44*f**8*y**10 - 59*f**6*y**10 - 2*f**4*y**10) + x**2*(8*f**10*y**12 - 40*f**8*y**12 - 7*f**6*y**12) + y**14*(-8*f**10 - 4*f**8))*sin(p)**5/(sqrt(f**2*y**2 + x**2)*(f**10*y**18 + x**18 + x**16*(5*f**2*y**2 + 4*y**2) + x**14*(10*f**4*y**4 + 20*f**2*y**4 + 6*y**4) + x**12*(10*f**6*y**6 + 40*f**4*y**6 + 30*f**2*y**6 + 4*y**6) + x**10*(5*f**8*y**8 + 40*f**6*y**8 + 60*f**4*y**8 + 20*f**2*y**8 + y**8) + x**8*(f**10*y**10 + 20*f**8*y**10 + 60*f**6*y**10 + 40*f**4*y**10 + 5*f**2*y**10) + x**6*(4*f**10*y**12 + 30*f**8*y**12 + 40*f**6*y**12 + 10*f**4*y**12) + x**4*(6*f**10*y**14 + 20*f**8*y**14 + 10*f**6*y**14) + x**2*(4*f**10*y**16 + 5*f**8*y**16))) + 300*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-2*x**14 + x**12*(-f**2*y**2 + 12*y**2) + x**10*(4*f**4*y**4 + 71*f**2*y**4 - 2*y**4) + x**8*(3*f**6*y**6 + 134*f**4*y**6 - 7*f**2*y**6) + x**6*(111*f**6*y**8 - 32*f**4*y**8 + f**2*y**8) + x**4*(44*f**8*y**10 - 59*f**6*y**10 - 2*f**4*y**10) + x**2*(8*f**10*y**12 - 40*f**8*y**12 - 7*f**6*y**12) + y**14*(-8*f**10 - 4*f**8))*sin(p)**3*cos(p)**2/(sqrt(f**2*y**2 + x**2)*(f**10*y**18 + x**18 + x**16*(5*f**2*y**2 + 4*y**2) + x**14*(10*f**4*y**4 + 20*f**2*y**4 + 6*y**4) + x**12*(10*f**6*y**6 + 40*f**4*y**6 + 30*f**2*y**6 + 4*y**6) + x**10*(5*f**8*y**8 + 40*f**6*y**8 + 60*f**4*y**8 + 20*f**2*y**8 + y**8) + x**8*(f**10*y**10 + 20*f**8*y**10 + 60*f**6*y**10 + 40*f**4*y**10 + 5*f**2*y**10) + x**6*(4*f**10*y**12 + 30*f**8*y**12 + 40*f**6*y**12 + 10*f**4*y**12) + x**4*(6*f**10*y**14 + 20*f**8*y**14 + 10*f**6*y**14) + x**2*(4*f**10*y**16 + 5*f**8*y**16))) - 150*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-2*x**14 + x**12*(-f**2*y**2 + 12*y**2) + x**10*(4*f**4*y**4 + 71*f**2*y**4 - 2*y**4) + x**8*(3*f**6*y**6 + 134*f**4*y**6 - 7*f**2*y**6) + x**6*(111*f**6*y**8 - 32*f**4*y**8 + f**2*y**8) + x**4*(44*f**8*y**10 - 59*f**6*y**10 - 2*f**4*y**10) + x**2*(8*f**10*y**12 - 40*f**8*y**12 - 7*f**6*y**12) + y**14*(-8*f**10 - 4*f**8))*sin(p)*cos(p)**4/(sqrt(f**2*y**2 + x**2)*(f**10*y**18 + x**18 + x**16*(5*f**2*y**2 + 4*y**2) + x**14*(10*f**4*y**4 + 20*f**2*y**4 + 6*y**4) + x**12*(10*f**6*y**6 + 40*f**4*y**6 + 30*f**2*y**6 + 4*y**6) + x**10*(5*f**8*y**8 + 40*f**6*y**8 + 60*f**4*y**8 + 20*f**2*y**8 + y**8) + x**8*(f**10*y**10 + 20*f**8*y**10 + 60*f**6*y**10 + 40*f**4*y**10 + 5*f**2*y**10) + x**6*(4*f**10*y**12 + 30*f**8*y**12 + 40*f**6*y**12 + 10*f**4*y**12) + x**4*(6*f**10*y**14 + 20*f**8*y**14 + 10*f**6*y**14) + x**2*(4*f**10*y**16 + 5*f**8*y**16)))) - 0.0625*y*(-150*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-2*f**6*y**10 + x**10*(-4*f**2 - 8) + x**8*(f**4*y**2 - 24*f**2*y**2 + 8*y**2) + x**6*(-3*f**4*y**4 + 28*f**2*y**4) + x**4*(-2*f**6*y**6 + 47*f**4*y**6) + x**2*(12*f**6*y**8 + 3*f**4*y**8))*sin(p)**4*cos(p)/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) + 300*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-2*f**6*y**10 + x**10*(-4*f**2 - 8) + x**8*(f**4*y**2 - 24*f**2*y**2 + 8*y**2) + x**6*(-3*f**4*y**4 + 28*f**2*y**4) + x**4*(-2*f**6*y**6 + 47*f**4*y**6) + x**2*(12*f**6*y**8 + 3*f**4*y**8))*sin(p)**2*cos(p)**3/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))) - 30*sqrt(f)*g*sqrt(-1/(f**2 - 1))*sqrt(1 - f**2)*(-2*f**6*y**10 + x**10*(-4*f**2 - 8) + x**8*(f**4*y**2 - 24*f**2*y**2 + 8*y**2) + x**6*(-3*f**4*y**4 + 28*f**2*y**4) + x**4*(-2*f**6*y**6 + 47*f**4*y**6) + x**2*(12*f**6*y**8 + 3*f**4*y**8))*cos(p)**5/(sqrt(f**2*y**2 + x**2)*(f**6*y**14 + x**14 + x**12*(3*f**2*y**2 + 4*y**2) + x**10*(3*f**4*y**4 + 12*f**2*y**4 + 6*y**4) + x**8*(f**6*y**6 + 12*f**4*y**6 + 18*f**2*y**6 + 4*y**6) + x**6*(4*f**6*y**8 + 18*f**4*y**8 + 12*f**2*y**8 + y**8) + x**4*(6*f**6*y**10 + 12*f**4*y**10 + 3*f**2*y**10) + x**2*(4*f**6*y**12 + 3*f**4*y**12))))
